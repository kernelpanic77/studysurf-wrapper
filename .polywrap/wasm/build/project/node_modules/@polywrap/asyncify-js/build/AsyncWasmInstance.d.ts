declare type WasmMemory = WebAssembly.Memory;
declare type WasmExports = WebAssembly.Exports;
declare type WasmImports = WebAssembly.Imports;
export declare class AsyncWasmInstance {
    static requiredExports: readonly string[];
    private static _dataAddr;
    private static _dataStart;
    private static _dataEnd;
    private _instance;
    private _wrappedImports;
    private _wrappedExports;
    private _importFnResult;
    private constructor();
    static createMemory(config: {
        module: Uint8Array;
    }): WasmMemory;
    static createInstance(config: {
        module: Uint8Array;
        imports: WasmImports;
        requiredExports?: readonly string[];
    }): Promise<AsyncWasmInstance>;
    get exports(): WasmExports;
    private _getAsyncifyState;
    private _assertNoneState;
    private _wrapImports;
    private _wrapModuleImports;
    private _wrapImportFn;
    private _wrapExports;
    private _wrapExportFn;
}
export {};
