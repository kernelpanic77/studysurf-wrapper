import { ClientConfig, Uri, PluginPackage, IUriResolver } from "@polywrap/core-js";
import { IWrapperCache } from "@polywrap/uri-resolvers-js";
export declare class ClientConfigBuilder {
    private _config;
    add(config: Partial<ClientConfig<Uri | string>>): ClientConfigBuilder;
    addDefaults(wrapperCache?: IWrapperCache): ClientConfigBuilder;
    addPlugin<TPluginConfig>(uri: Uri | string, plugin: PluginPackage<TPluginConfig>): ClientConfigBuilder;
    removePlugin(uri: Uri | string): ClientConfigBuilder;
    addEnv(uri: Uri | string, env: Record<string, unknown>): ClientConfigBuilder;
    removeEnv(uri: Uri | string): ClientConfigBuilder;
    setEnv(uri: Uri | string, env: Record<string, unknown>): ClientConfigBuilder;
    addInterfaceImplementation(interfaceUri: Uri | string, implementationUri: Uri | string): ClientConfigBuilder;
    addInterfaceImplementations(interfaceUri: Uri | string, implementationUris: Array<Uri | string>): ClientConfigBuilder;
    removeInterfaceImplementation(interfaceUri: Uri | string, implementationUri: Uri | string): ClientConfigBuilder;
    addUriRedirect(from: Uri | string, to: Uri | string): ClientConfigBuilder;
    removeUriRedirect(from: Uri | string): ClientConfigBuilder;
    setResolver(resolver: IUriResolver<unknown>): ClientConfigBuilder;
    build(): ClientConfig<Uri>;
    buildPartial(): Partial<ClientConfig<Uri>>;
}
