"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultWrappers = exports.defaultIpfsProviders = exports.getDefaultClientConfig = void 0;
var core_js_1 = require("@polywrap/core-js");
var ipfs_plugin_js_1 = require("@polywrap/ipfs-plugin-js");
var ipfs_resolver_plugin_js_1 = require("@polywrap/ipfs-resolver-plugin-js");
var ethereum_plugin_js_1 = require("@polywrap/ethereum-plugin-js");
var uri_resolvers_js_1 = require("@polywrap/uri-resolvers-js");
var uri_resolver_extensions_js_1 = require("@polywrap/uri-resolver-extensions-js");
var ens_resolver_plugin_js_1 = require("@polywrap/ens-resolver-plugin-js");
var http_plugin_js_1 = require("@polywrap/http-plugin-js");
var http_resolver_plugin_js_1 = require("@polywrap/http-resolver-plugin-js");
var fs_plugin_js_1 = require("@polywrap/fs-plugin-js");
var logger_plugin_js_1 = require("@polywrap/logger-plugin-js");
var fs_resolver_plugin_js_1 = require("@polywrap/fs-resolver-plugin-js");
var getDefaultClientConfig = function (wrapperCache) {
    return {
        envs: [
            {
                uri: new core_js_1.Uri(exports.defaultWrappers.graphNode),
                env: {
                    provider: "https://api.thegraph.com",
                },
            },
            {
                uri: new core_js_1.Uri("wrap://ens/ipfs.polywrap.eth"),
                env: {
                    provider: exports.defaultIpfsProviders[0],
                    fallbackProviders: exports.defaultIpfsProviders.slice(1),
                },
            },
            {
                uri: new core_js_1.Uri("wrap://ens/ipfs-resolver.polywrap.eth"),
                env: {
                    retries: { tryResolveUri: 1, getFile: 1 },
                },
            },
        ],
        redirects: [
            {
                from: new core_js_1.Uri("wrap://ens/sha3.polywrap.eth"),
                to: new core_js_1.Uri(exports.defaultWrappers.sha3),
            },
            {
                from: new core_js_1.Uri("wrap://ens/uts46.polywrap.eth"),
                to: new core_js_1.Uri(exports.defaultWrappers.uts46),
            },
            {
                from: new core_js_1.Uri("wrap://ens/graph-node.polywrap.eth"),
                to: new core_js_1.Uri(exports.defaultWrappers.graphNode),
            },
        ],
        plugins: [
            // IPFS is required for downloading Polywrap packages
            {
                uri: new core_js_1.Uri("wrap://ens/ipfs.polywrap.eth"),
                plugin: ipfs_plugin_js_1.ipfsPlugin({}),
            },
            // ENS is required for resolving domain to IPFS hashes
            {
                uri: new core_js_1.Uri("wrap://ens/ens-resolver.polywrap.eth"),
                plugin: ens_resolver_plugin_js_1.ensResolverPlugin({}),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/ethereum.polywrap.eth"),
                plugin: ethereum_plugin_js_1.ethereumPlugin({
                    connections: new ethereum_plugin_js_1.Connections({
                        networks: {
                            mainnet: new ethereum_plugin_js_1.Connection({
                                provider: "https://mainnet.infura.io/v3/b00b2c2cc09c487685e9fb061256d6a6",
                            }),
                            goerli: new ethereum_plugin_js_1.Connection({
                                provider: "https://goerli.infura.io/v3/b00b2c2cc09c487685e9fb061256d6a6",
                            }),
                        },
                    }),
                }),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/http.polywrap.eth"),
                plugin: http_plugin_js_1.httpPlugin({}),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/http-resolver.polywrap.eth"),
                plugin: http_resolver_plugin_js_1.httpResolverPlugin({}),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/js-logger.polywrap.eth"),
                plugin: logger_plugin_js_1.loggerPlugin({}),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/fs.polywrap.eth"),
                plugin: fs_plugin_js_1.fileSystemPlugin({}),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/fs-resolver.polywrap.eth"),
                plugin: fs_resolver_plugin_js_1.fileSystemResolverPlugin({}),
            },
            {
                uri: new core_js_1.Uri("wrap://ens/ipfs-resolver.polywrap.eth"),
                plugin: ipfs_resolver_plugin_js_1.ipfsResolverPlugin({}),
            },
        ],
        interfaces: [
            {
                interface: new core_js_1.Uri("wrap://ens/uri-resolver.core.polywrap.eth"),
                implementations: [
                    new core_js_1.Uri("wrap://ens/ipfs-resolver.polywrap.eth"),
                    new core_js_1.Uri("wrap://ens/ens-resolver.polywrap.eth"),
                    new core_js_1.Uri("wrap://ens/fs-resolver.polywrap.eth"),
                    new core_js_1.Uri("wrap://ens/http-resolver.polywrap.eth"),
                ],
            },
            {
                interface: new core_js_1.Uri("wrap://ens/logger.core.polywrap.eth"),
                implementations: [new core_js_1.Uri("wrap://ens/js-logger.polywrap.eth")],
            },
        ],
        resolver: new uri_resolvers_js_1.RecursiveResolver(new uri_resolvers_js_1.PackageToWrapperCacheResolver(wrapperCache !== null && wrapperCache !== void 0 ? wrapperCache : new uri_resolvers_js_1.WrapperCache(), [
            new uri_resolvers_js_1.LegacyRedirectsResolver(),
            new uri_resolvers_js_1.LegacyPluginsResolver(),
            new uri_resolver_extensions_js_1.ExtendableUriResolver(),
        ])),
    };
};
exports.getDefaultClientConfig = getDefaultClientConfig;
exports.defaultIpfsProviders = [
    "https://ipfs.wrappers.io",
    "https://ipfs.io",
];
exports.defaultWrappers = {
    sha3: "wrap://ens/goerli/sha3.wrappers.eth",
    uts46: "wrap://ens/goerli/uts46-lite.wrappers.eth",
    graphNode: "wrap://ens/goerli/graph-node.wrappers.eth",
};
//# sourceMappingURL=default-client-config.js.map