"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getErrorSource = void 0;
var re = /\((?<file>.*):(?<row>\d+):(?<col>\d+)\)$/;
// retrieve the most recent line of source information for an error
function getErrorSource(error) {
    var _a;
    if (!error || !error.stack)
        return undefined;
    // find first source line in stack
    var stack = (_a = error.stack) === null || _a === void 0 ? void 0 : _a.split("\n");
    var i = 0;
    for (i; i < stack.length && !stack[i].startsWith("    at"); i++) { } // eslint-disable-line no-empty
    var result = re.exec(stack[i]);
    if (!result)
        return undefined;
    var _b = result.groups, file = _b.file, row = _b.row, col = _b.col; // eslint-disable-line @typescript-eslint/no-non-null-assertion
    return file
        ? {
            file: file,
            row: row ? parseInt(row) : undefined,
            col: col ? parseInt(col) : undefined,
        }
        : undefined;
}
exports.getErrorSource = getErrorSource;
//# sourceMappingURL=getErrorSource.js.map