"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sanitizeEnvs = void 0;
var _1 = require(".");
var tracing_js_1 = require("@polywrap/tracing-js");
exports.sanitizeEnvs = tracing_js_1.Tracer.traceFunc("core: sanitizeEnvs", function (environments) {
    var e_1, _a;
    var output = [];
    try {
        for (var environments_1 = __values(environments), environments_1_1 = environments_1.next(); !environments_1_1.done; environments_1_1 = environments_1.next()) {
            var env = environments_1_1.value;
            output.push(__assign(__assign({}, env), { uri: _1.Uri.from(env.uri) }));
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (environments_1_1 && !environments_1_1.done && (_a = environments_1.return)) _a.call(environments_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return output;
});
//# sourceMappingURL=Env.js.map