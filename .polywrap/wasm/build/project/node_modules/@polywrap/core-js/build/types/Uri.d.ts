import { Result } from "@polywrap/result";
/** URI configuration */
export interface UriConfig {
    authority: string;
    path: string;
    uri: string;
}
/**
 * A Polywrap URI. Some examples of valid URIs are:
 * wrap://ipfs/QmHASH
 * wrap://ens/sub.dimain.eth
 * wrap://fs/directory/file.txt
 * wrap://uns/domain.crypto
 *
 * Breaking down the various parts of the URI, as it applies
 * to [the URI standard](https://tools.ietf.org/html/rfc3986#section-3):
 * **wrap://** - URI Scheme: differentiates Polywrap URIs.
 * **ipfs/** - URI Authority: allows the Polywrap URI resolution algorithm to determine an authoritative URI resolver.
 * **sub.domain.eth** - URI Path: tells the Authority where the Wrapper resides.
 */
export declare class Uri {
    private _config;
    get authority(): string;
    get path(): string;
    get uri(): string;
    constructor(uri: string);
    static equals(a: Uri, b: Uri): boolean;
    static isUri(value: unknown): value is Uri;
    static isValidUri(uri: string, parsed?: UriConfig): boolean;
    toString(): string;
    toJSON(): string;
    static parseUri(uri: string): Result<UriConfig, Error>;
    static from(uri: Uri | string): Uri;
}
