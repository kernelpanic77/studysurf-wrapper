import { Client, Module, Args_tryResolveUri, Args_getFile, UriResolver_MaybeUriOrManifest, Bytes } from "./wrap";
import { PluginFactory } from "@polywrap/core-js";
export declare type Address = string;
export interface Addresses {
    [network: string]: Address;
}
export interface EnsResolverPluginConfig {
    addresses?: Addresses;
}
export declare class EnsResolverPlugin extends Module<EnsResolverPluginConfig> {
    static defaultAddress: string;
    constructor(config: EnsResolverPluginConfig);
    tryResolveUri(args: Args_tryResolveUri, client: Client): Promise<UriResolver_MaybeUriOrManifest | null>;
    getFile(_args: Args_getFile, _client: Client): Bytes | null;
    ensToCID(domain: string, client: Client): Promise<string>;
    private _setAddresses;
}
export declare const ensResolverPlugin: PluginFactory<EnsResolverPluginConfig>;
export declare const plugin: PluginFactory<EnsResolverPluginConfig>;
