import * as Types from "./";
import { Client, InvokeResult } from "@polywrap/core-js";
export declare type UInt = number;
export declare type UInt8 = number;
export declare type UInt16 = number;
export declare type UInt32 = number;
export declare type Int = number;
export declare type Int8 = number;
export declare type Int16 = number;
export declare type Int32 = number;
export declare type Bytes = Uint8Array;
export declare type BigInt = string;
export declare type BigNumber = string;
export declare type Json = string;
export declare type String = string;
export declare type Boolean = boolean;
export declare enum FileSystem_EncodingEnum {
    ASCII = 0,
    UTF8 = 1,
    UTF16LE = 2,
    UCS2 = 3,
    BASE64 = 4,
    BASE64URL = 5,
    LATIN1 = 6,
    BINARY = 7,
    HEX = 8
}
export declare type FileSystem_EncodingString = "ASCII" | "UTF8" | "UTF16LE" | "UCS2" | "BASE64" | "BASE64URL" | "LATIN1" | "BINARY" | "HEX";
export declare type FileSystem_Encoding = FileSystem_EncodingEnum | FileSystem_EncodingString;
interface FileSystem_Module_Args_readFile {
    path: Types.String;
}
interface FileSystem_Module_Args_readFileAsString {
    path: Types.String;
    encoding?: Types.FileSystem_Encoding | null;
}
interface FileSystem_Module_Args_exists {
    path: Types.String;
}
interface FileSystem_Module_Args_writeFile {
    path: Types.String;
    data: Types.Bytes;
}
interface FileSystem_Module_Args_mkdir {
    path: Types.String;
    recursive?: Types.Boolean | null;
}
interface FileSystem_Module_Args_rm {
    path: Types.String;
    recursive?: Types.Boolean | null;
    force?: Types.Boolean | null;
}
interface FileSystem_Module_Args_rmdir {
    path: Types.String;
}
export declare const FileSystem_Module: {
    readFile: (args: FileSystem_Module_Args_readFile, client: Client) => Promise<InvokeResult<Types.Bytes>>;
    readFileAsString: (args: FileSystem_Module_Args_readFileAsString, client: Client) => Promise<InvokeResult<Types.String>>;
    exists: (args: FileSystem_Module_Args_exists, client: Client) => Promise<InvokeResult<Types.Boolean>>;
    writeFile: (args: FileSystem_Module_Args_writeFile, client: Client) => Promise<InvokeResult<Types.Boolean | null>>;
    mkdir: (args: FileSystem_Module_Args_mkdir, client: Client) => Promise<InvokeResult<Types.Boolean | null>>;
    rm: (args: FileSystem_Module_Args_rm, client: Client) => Promise<InvokeResult<Types.Boolean | null>>;
    rmdir: (args: FileSystem_Module_Args_rmdir, client: Client) => Promise<InvokeResult<Types.Boolean | null>>;
};
export {};
