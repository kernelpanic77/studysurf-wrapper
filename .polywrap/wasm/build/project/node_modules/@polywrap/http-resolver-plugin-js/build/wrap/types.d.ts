import * as Types from "./";
import { Client, InvokeResult } from "@polywrap/core-js";
export declare type UInt = number;
export declare type UInt8 = number;
export declare type UInt16 = number;
export declare type UInt32 = number;
export declare type Int = number;
export declare type Int8 = number;
export declare type Int16 = number;
export declare type Int32 = number;
export declare type Bytes = Uint8Array;
export declare type BigInt = string;
export declare type BigNumber = string;
export declare type Json = string;
export declare type String = string;
export declare type Boolean = boolean;
export interface UriResolver_MaybeUriOrManifest {
    uri?: Types.String | null;
    manifest?: Types.Bytes | null;
}
export interface Http_Request {
    headers?: Map<Types.String, Types.String> | null;
    urlParams?: Map<Types.String, Types.String> | null;
    responseType: Types.Http_ResponseType;
    body?: Types.String | null;
}
export interface Http_Response {
    status: Types.Int;
    statusText: Types.String;
    headers?: Map<Types.String, Types.String> | null;
    body?: Types.String | null;
}
export declare enum Http_ResponseTypeEnum {
    TEXT = 0,
    BINARY = 1
}
export declare type Http_ResponseTypeString = "TEXT" | "BINARY";
export declare type Http_ResponseType = Http_ResponseTypeEnum | Http_ResponseTypeString;
interface UriResolver_Module_Args_tryResolveUri {
    authority: Types.String;
    path: Types.String;
}
interface UriResolver_Module_Args_getFile {
    path: Types.String;
}
export declare const UriResolver_Module: {
    tryResolveUri: (args: UriResolver_Module_Args_tryResolveUri, client: Client) => Promise<InvokeResult<Types.UriResolver_MaybeUriOrManifest | null>>;
    getFile: (args: UriResolver_Module_Args_getFile, client: Client) => Promise<InvokeResult<Types.Bytes | null>>;
};
interface Http_Module_Args_get {
    url: Types.String;
    request?: Types.Http_Request | null;
}
interface Http_Module_Args_post {
    url: Types.String;
    request?: Types.Http_Request | null;
}
export declare const Http_Module: {
    get: (args: Http_Module_Args_get, client: Client) => Promise<InvokeResult<Types.Http_Response | null>>;
    post: (args: Http_Module_Args_post, client: Client) => Promise<InvokeResult<Types.Http_Response | null>>;
};
export {};
