import * as Types from "./types";
import { Client, PluginModule, MaybeAsync } from "@polywrap/core-js";
export interface Args_cat {
    cid: Types.String;
    options?: Types.Ipfs_Options | null;
}
export interface Args_resolve {
    cid: Types.String;
    options?: Types.Ipfs_Options | null;
}
export interface Args_addFile {
    data: Types.Bytes;
}
export declare abstract class Module<TConfig> extends PluginModule<TConfig, Types.Env> {
    abstract cat(args: Args_cat, client: Client): MaybeAsync<Types.Bytes>;
    abstract resolve(args: Args_resolve, client: Client): MaybeAsync<Types.Ipfs_ResolveResult | null>;
    abstract addFile(args: Args_addFile, client: Client): MaybeAsync<Types.String>;
}
