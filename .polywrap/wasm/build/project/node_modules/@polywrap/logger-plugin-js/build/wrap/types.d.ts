import * as Types from "./";
import { Client, InvokeResult } from "@polywrap/core-js";
export declare type UInt = number;
export declare type UInt8 = number;
export declare type UInt16 = number;
export declare type UInt32 = number;
export declare type Int = number;
export declare type Int8 = number;
export declare type Int16 = number;
export declare type Int32 = number;
export declare type Bytes = Uint8Array;
export declare type BigInt = string;
export declare type BigNumber = string;
export declare type Json = string;
export declare type String = string;
export declare type Boolean = boolean;
export declare enum Logger_LogLevelEnum {
    DEBUG = 0,
    INFO = 1,
    WARN = 2,
    ERROR = 3
}
export declare type Logger_LogLevelString = "DEBUG" | "INFO" | "WARN" | "ERROR";
export declare type Logger_LogLevel = Logger_LogLevelEnum | Logger_LogLevelString;
interface Logger_Module_Args_log {
    level: Types.Logger_LogLevel;
    message: Types.String;
}
export declare const Logger_Module: {
    log: (args: Logger_Module_Args_log, client: Client) => Promise<InvokeResult<Types.Boolean>>;
};
export {};
