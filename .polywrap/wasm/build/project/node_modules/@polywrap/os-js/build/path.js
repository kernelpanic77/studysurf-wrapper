"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeWithLinuxPathSep = exports.getCommonPath = exports.getRelativePath = void 0;
var path_1 = __importDefault(require("path"));
function getRelativePath(from, to) {
    if (!path_1.default.isAbsolute(from)) {
        throw Error("root path must be absolute. path: " + from);
    }
    if (!path_1.default.isAbsolute(to)) {
        throw Error("destination path must be absolute. path: " + to);
    }
    return normalizeWithLinuxPathSep(path_1.default.relative(from, to));
}
exports.getRelativePath = getRelativePath;
function getCommonPath(a, b) {
    // Walk the two path strings from left->right
    // and return all common parent directories
    a = normalizeWithLinuxPathSep(a);
    b = normalizeWithLinuxPathSep(b);
    var common = "";
    var idx = a.indexOf("/");
    if (idx === -1) {
        idx = a.length;
    }
    while (idx !== -1) {
        var segA = a.substr(0, idx + 1);
        var segB = b.substr(0, idx + 1);
        if (segA === segB) {
            common = segA;
            idx = a.indexOf("/", idx + 1);
        }
        else {
            idx = -1;
        }
    }
    return common;
}
exports.getCommonPath = getCommonPath;
function normalizeWithLinuxPathSep(path) {
    return path_1.default.normalize(path).replace(/\\/g, "/");
}
exports.normalizeWithLinuxPathSep = normalizeWithLinuxPathSep;
//# sourceMappingURL=path.js.map