"use strict";
/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/deserialize-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/deserialize-ts.mustache,
 * and run node ./scripts/manifest/generateFormatTypes.js to regenerate this file.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializePolywrapWorkflow = void 0;
var _1 = require(".");
var Semver = __importStar(require("semver"));
var yaml_1 = __importDefault(require("yaml"));
function deserializePolywrapWorkflow(manifest, options) {
    var _a;
    var anyPolywrapWorkflow;
    try {
        anyPolywrapWorkflow = JSON.parse(manifest);
    }
    catch (_) {
        try {
            anyPolywrapWorkflow = yaml_1.default.parse(manifest);
        }
        catch (_) { }
    }
    if (!anyPolywrapWorkflow) {
        throw Error("Unable to parse PolywrapWorkflow: " + manifest);
    }
    if (!options || !options.noValidate) {
        _1.validatePolywrapWorkflow(anyPolywrapWorkflow, options === null || options === void 0 ? void 0 : options.extSchema);
    }
    anyPolywrapWorkflow.__type = "PolywrapWorkflow";
    var versionCompare = Semver.compare(Semver.coerce(anyPolywrapWorkflow.format) || anyPolywrapWorkflow.format, Semver.coerce(_1.latestPolywrapWorkflowFormat) || _1.latestPolywrapWorkflowFormat);
    if (versionCompare === -1) {
        // Warn user to migrate their manifest
        (_a = options === null || options === void 0 ? void 0 : options.logger) === null || _a === void 0 ? void 0 : _a.warn("PolywrapWorkflow is using an older version of the manifest format (" + anyPolywrapWorkflow.format + "). Please update your manifest to the latest version (" + _1.latestPolywrapWorkflowFormat + ") by using the \"polywrap manifest migrate <type>\" command.");
        // Upgrade
        return _1.migratePolywrapWorkflow(anyPolywrapWorkflow, _1.latestPolywrapWorkflowFormat, options === null || options === void 0 ? void 0 : options.logger);
    }
    else if (versionCompare === 1) {
        // Downgrade
        throw Error("Cannot downgrade Polywrap version " + anyPolywrapWorkflow.format + ", please upgrade your PolywrapClient package.");
    }
    else {
        // Latest
        return anyPolywrapWorkflow;
    }
}
exports.deserializePolywrapWorkflow = deserializePolywrapWorkflow;
//# sourceMappingURL=deserialize.js.map