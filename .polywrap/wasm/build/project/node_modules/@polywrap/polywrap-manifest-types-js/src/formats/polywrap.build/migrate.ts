/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/migrate-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/migrate-ts.mustache,
 * and run node ./scripts/manifest/generateFormatTypes.js to regenerate this file.
 */
import {
  AnyBuildManifest,
  BuildManifest,
  BuildManifestFormats,
} from ".";
import { findShortestMigrationPath } from "../../migrations";
import { migrators } from "./migrators";
import { ILogger } from "@polywrap/logging-js";

export function migrateBuildManifest(
  manifest: AnyBuildManifest,
  to: BuildManifestFormats,
  logger?: ILogger
): BuildManifest {
  let from = manifest.format as BuildManifestFormats;

  if (!(Object.values(BuildManifestFormats).some(x => x === from))) {
    throw new Error(`Unrecognized BuildManifestFormat "${manifest.format}"`);
  }

  if (!(Object.values(BuildManifestFormats).some(x => x === to))) {
    throw new Error(`Unrecognized BuildManifestFormat "${to}"`);
  }

  const migrationPath = findShortestMigrationPath(migrators, from, to);
  if (!migrationPath) {
    throw new Error(
      `Migration path from BuildManifestFormat "${from}" to "${to}" is not available`
    );
  }

  let newManifest = manifest;

  for(const migrator of migrationPath){
    newManifest = migrator.migrate(newManifest, logger) as AnyBuildManifest;
  }

  return newManifest as BuildManifest;
}
