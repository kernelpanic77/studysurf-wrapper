"use strict";
/* eslint-disable @typescript-eslint/naming-convention */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isKeyword = exports.isBaseType = void 0;
var baseTypes = {
    u8: "u8",
    u16: "u16",
    u32: "u32",
    i8: "i8",
    i16: "i16",
    i32: "i32",
    string: "string",
    bool: "bool",
};
function isBaseType(type) {
    return type in baseTypes;
}
exports.isBaseType = isBaseType;
// based on:
// - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#keywords
// - https://github.com/AssemblyScript/assemblyscript/blob/f54dbfb527842f3d68f18643bb614d104b4f0160/src/common.ts#L107
// - https://github.com/AssemblyScript/assemblyscript/blob/f54dbfb527842f3d68f18643bb614d104b4f0160/src/tokenizer.ts#L181
var keywords = {
    async: "async",
    await: "await",
    arguments: "arguments",
    abstract: "abstract",
    as: "as",
    break: "break",
    const: "const",
    class: "class",
    catch: "catch",
    case: "case",
    continue: "continue",
    constructor: "constructor",
    default: "default",
    declare: "declare",
    do: "do",
    delete: "delete",
    debugger: "debugger",
    else: "else",
    enum: "enum",
    export: "export",
    extends: "extends",
    for: "for",
    from: "from",
    function: "function",
    finally: "finally",
    // get: "get",
    if: "if",
    in: "in",
    is: "is",
    implements: "implements",
    import: "import",
    instanceof: "instanceof",
    interface: "interface",
    keyof: "keyof",
    let: "let",
    module: "module",
    new: "new",
    namespace: "namespace",
    of: "of",
    private: "private",
    package: "package",
    public: "public",
    protected: "protected",
    return: "return",
    readonly: "readonly",
    switch: "switch",
    static: "static",
    // set: "set",
    super: "super",
    this: "this",
    type: "type",
    try: "try",
    throw: "throw",
    typeof: "typeof",
    var: "var",
    while: "while",
    with: "with",
    yield: "yield",
    // types
    i8: "i8",
    i16: "i16",
    i32: "i32",
    i64: "i64",
    isize: "isize",
    u8: "u8",
    u16: "u16",
    u32: "u32",
    u64: "u64",
    usize: "usize",
    bool: "bool",
    f32: "f32",
    f64: "f64",
    v128: "v128",
    funcref: "funcref",
    externref: "externref",
    anyref: "anyref",
    eqref: "eqref",
    i31ref: "i31ref",
    dataref: "dataref",
    i8x16: "i8x16",
    u8x16: "u8x16",
    i16x8: "i16x8",
    u16x8: "u16x8",
    i32x4: "i32x4",
    u32x4: "u32x4",
    i64x2: "i64x2",
    u64x2: "u64x2",
    f32x4: "f32x4",
    f64x2: "f64x2",
    void: "void",
    number: "number",
    boolean: "boolean",
    string: "string",
    native: "native",
    indexof: "indexof",
    valueof: "valueof",
    returnof: "returnof",
    nonnull: "nonnull",
    // aliases
    null: "null",
    true: "true",
    false: "false",
    // constants
    ASC_TARGET: "ASC_TARGET",
    ASC_RUNTIME: "ASC_RUNTIME",
    ASC_NO_ASSERT: "ASC_NO_ASSERT",
    ASC_MEMORY_BASE: "ASC_MEMORY_BASE",
    ASC_TABLE_BASE: "ASC_TABLE_BASE",
    ASC_OPTIMIZE_LEVEL: "ASC_OPTIMIZE_LEVEL",
    ASC_SHRINK_LEVEL: "ASC_SHRINK_LEVEL",
    ASC_LOW_MEMORY_LIMIT: "ASC_LOW_MEMORY_LIMIT",
    ASC_EXPORT_RUNTIME: "ASC_EXPORT_RUNTIME",
    ASC_WASI: "ASC_WASI",
    ASC_FEATURE_SIGN_EXTENSION: "ASC_FEATURE_SIGN_EXTENSION",
    ASC_FEATURE_MUTABLE_GLOBALS: "ASC_FEATURE_MUTABLE_GLOBALS",
    ASC_FEATURE_NONTRAPPING_F2I: "ASC_FEATURE_NONTRAPPING_F2I",
    ASC_FEATURE_BULK_MEMORY: "ASC_FEATURE_BULK_MEMORY",
    ASC_FEATURE_SIMD: "ASC_FEATURE_SIMD",
    ASC_FEATURE_THREADS: "ASC_FEATURE_THREADS",
    ASC_FEATURE_EXCEPTION_HANDLING: "ASC_FEATURE_EXCEPTION_HANDLING",
    ASC_FEATURE_TAIL_CALLS: "ASC_FEATURE_TAIL_CALLS",
    ASC_FEATURE_REFERENCE_TYPES: "ASC_FEATURE_REFERENCE_TYPES",
    ASC_FEATURE_MULTI_VALUE: "ASC_FEATURE_MULTI_VALUE",
    ASC_FEATURE_GC: "ASC_FEATURE_GC",
    ASC_FEATURE_MEMORY64: "ASC_FEATURE_MEMORY64",
    ASC_VERSION_MAJOR: "ASC_VERSION_MAJOR",
    ASC_VERSION_MINOR: "ASC_VERSION_MINOR",
    ASC_VERSION_PATCH: "ASC_VERSION_PATCH",
    // classes
    I8: "I8",
    I16: "I16",
    I32: "I32",
    I64: "I64",
    Isize: "Isize",
    U8: "U8",
    U16: "U16",
    U32: "U32",
    U64: "U64",
    Usize: "Usize",
    Bool: "Bool",
    F32: "F32",
    F64: "F64",
    V128: "V128",
    Funcref: "Funcref",
    Externref: "Externref",
    Anyref: "Anyref",
    Eqref: "Eqref",
    I31ref: "I31ref",
    Dataref: "Dataref",
    String: "String",
    Object: "Object",
    Array: "Array",
    StaticArray: "StaticArray",
    Set: "Set",
    Map: "Map",
    Function: "Function",
    ArrayBufferView: "ArrayBufferView",
    ArrayBuffer: "ArrayBuffer",
    Math: "Math",
    Mathf: "Mathf",
    NativeMath: "NativeMath",
    NativeMathf: "NativeMathf",
    Int8Array: "Int8Array",
    Int16Array: "Int16Array",
    Int32Array: "Int32Array",
    Int64Array: "Int64Array",
    Uint8Array: "Uint8Array",
    Uint8ClampedArray: "Uint8ClampedArray",
    Uint16Array: "Uint16Array",
    Uint32Array: "Uint32Array",
    Uint64Array: "Uint64Array",
    Float32Array: "Float32Array",
    Float64Array: "Float64Array",
    TemplateStringsArray: "TemplateStringsArray",
    Error: "Error",
    Result: "Result",
    Box: "Box",
    JSON: "JSON",
    // runtime
    abort: "abort",
    trace: "trace",
    seed: "seed",
    pow: "pow",
    ipow32: "ipow32",
    ipow64: "ipow64",
    mod: "mod",
    __alloc: "__alloc",
    __realloc: "__realloc",
    __free: "__free",
    __new: "__new",
    __renew: "__renew",
    __link: "__link",
    __collect: "__collect",
    __typeinfo: "__typeinfo",
    __instanceof: "__instanceof",
    __visit: "__visit",
    __newBuffer: "__newBuffer",
    __newArray: "__newArray",
};
function isKeyword(keyword) {
    return keyword in keywords;
}
exports.isKeyword = isKeyword;
//# sourceMappingURL=types.js.map