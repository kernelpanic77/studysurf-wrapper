"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isKeyword = exports.isBuiltInType = exports.isBaseType = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
var baseTypes = {
    UInt: "UInt",
    UInt8: "UInt8",
    UInt16: "UInt16",
    UInt32: "UInt32",
    UInt64: "UInt64",
    Int: "Int",
    Int8: "Int8",
    Int16: "Int16",
    Int32: "Int32",
    Int64: "Int64",
    String: "String",
    Boolean: "Boolean",
    Bytes: "Bytes",
};
function isBaseType(type) {
    return type in baseTypes;
}
exports.isBaseType = isBaseType;
var builtInTypes = {
    BigInt: "BigInt",
    BigNumber: "BigNumber",
    JSON: "JSON",
};
function isBuiltInType(type) {
    return type in builtInTypes;
}
exports.isBuiltInType = isBuiltInType;
var keywords = {
    as: "as",
    break: "break",
    const: "const",
    continue: "continue",
    crate: "crate",
    else: "else",
    enum: "enum",
    extern: "extern",
    false: "false",
    fn: "fn",
    for: "for",
    if: "if",
    impl: "impl",
    in: "in",
    let: "let",
    loop: "loop",
    match: "match",
    mod: "mod",
    move: "move",
    mut: "mut",
    pub: "pub",
    ref: "ref",
    return: "return",
    self: "self",
    Self: "Self",
    static: "static",
    struct: "struct",
    super: "super",
    trait: "trait",
    true: "true",
    type: "type",
    unsafe: "unsafe",
    use: "use",
    where: "where",
    while: "while",
    async: "async",
    await: "await",
    dyn: "dyn",
    abstract: "abstract",
    become: "become",
    box: "box",
    Box: "Box",
    do: "do",
    final: "final",
    macro: "macro",
    override: "override",
    priv: "priv",
    typeof: "typeof",
    unsized: "unsized",
    virtual: "virtual",
    yield: "yield",
    try: "try",
    macro_rules: "macro_rules",
    union: "union",
};
function isKeyword(keyword) {
    return keyword in keywords;
}
exports.isKeyword = isKeyword;
//# sourceMappingURL=types.js.map