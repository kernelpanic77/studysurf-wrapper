declare const baseTypes: {
    boolean: string;
    number: string;
    string: string;
};
export declare type BaseTypes = typeof baseTypes;
export declare type BaseType = keyof BaseTypes;
export declare function isBaseType(type: string): type is BaseType;
declare const keywords: {
    break: string;
    case: string;
    catch: string;
    class: string;
    const: string;
    continue: string;
    debugger: string;
    default: string;
    delete: string;
    do: string;
    else: string;
    export: string;
    extends: string;
    false: string;
    finally: string;
    for: string;
    function: string;
    if: string;
    import: string;
    in: string;
    instanceof: string;
    new: string;
    null: string;
    return: string;
    super: string;
    switch: string;
    this: string;
    throw: string;
    true: string;
    try: string;
    typeof: string;
    var: string;
    void: string;
    while: string;
    with: string;
    yield: string;
    let: string;
    await: string;
    enum: string;
    implements: string;
    interface: string;
    package: string;
    private: string;
    protected: string;
    public: string;
    static: string;
    arguments: string;
    eval: string;
};
export declare type Keywords = typeof keywords;
export declare type Keyword = keyof Keywords;
export declare function isKeyword(keyword: string): keyword is Keyword;
export {};
