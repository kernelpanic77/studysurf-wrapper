import { AnyDefinition, ArrayDefinition, CapabilityDefinition, EnumDefinition, EnumRef, EnvDefinition, GenericDefinition, ImportedEnumDefinition, ImportedEnvDefinition, ImportedModuleDefinition, ImportedObjectDefinition, InterfaceDefinition, InterfaceImplementedDefinition, MapDefinition, MapKeyDefinition, MethodDefinition, ModuleDefinition, ObjectDefinition, ObjectRef, PropertyDefinition, ScalarDefinition, UnresolvedObjectOrEnumRef, WithKind, WithComment } from "@polywrap/wrap-manifest-types-js";
export declare enum DefinitionKind {
    Generic = 0,
    Object = 1,
    Any = 2,
    Scalar = 4,
    Enum = 8,
    Array = 18,
    Property = 34,
    Method = 64,
    Module = 128,
    ImportedModule = 256,
    ImportedEnum = 520,
    ImportedObject = 1025,
    InterfaceImplemented = 2048,
    UnresolvedObjectOrEnum = 4096,
    ObjectRef = 8192,
    EnumRef = 16384,
    Interface = 32768,
    Env = 65536,
    MapKey = 131072,
    Map = 262146,
    ImportedEnv = 524288
}
export declare function isKind(type: WithKind, kind: DefinitionKind): boolean;
export declare function createGenericDefinition(args: Omit<GenericDefinition, "kind">): GenericDefinition;
export declare function createObjectDefinition(args: Omit<ObjectDefinition, "kind">): ObjectDefinition;
export declare function createObjectRef(args: Omit<ObjectRef, "kind">): ObjectRef;
export declare function createAnyDefinition(args: Omit<AnyDefinition, "kind">): AnyDefinition;
export declare function createMapKeyDefinition(args: Omit<MapKeyDefinition, "kind">): MapKeyDefinition;
export declare function createScalarDefinition(args: Omit<ScalarDefinition, "kind">): ScalarDefinition;
export declare function createEnumDefinition(args: Omit<EnumDefinition, "kind">): EnumDefinition;
export declare function createEnumRef(args: Omit<EnumRef, "kind">): EnumRef;
export declare function createUnresolvedObjectOrEnumRef(args: Omit<UnresolvedObjectOrEnumRef, "kind">): UnresolvedObjectOrEnumRef;
export declare function createMapDefinition(args: Omit<MapDefinition, "kind">): MapDefinition;
export declare function createArrayDefinition(args: Omit<ArrayDefinition, "kind">): ArrayDefinition;
export declare function createPropertyDefinition(args: Omit<PropertyDefinition, "kind">): PropertyDefinition;
export declare function createInterfaceImplementedDefinition(args: Omit<InterfaceImplementedDefinition, "kind">): InterfaceImplementedDefinition;
export declare function createArrayPropertyDefinition(args: Omit<ArrayDefinition, "kind"> & WithComment): PropertyDefinition;
export declare function createMapPropertyDefinition(args: Omit<MapDefinition, "kind"> & WithComment): PropertyDefinition;
export declare function createScalarPropertyDefinition(args: Omit<ScalarDefinition, "kind"> & WithComment): PropertyDefinition;
export declare function createEnumPropertyDefinition(args: Omit<EnumRef, "kind"> & WithComment): PropertyDefinition;
export declare function createObjectPropertyDefinition(args: Omit<ObjectRef, "kind"> & WithComment): PropertyDefinition;
export declare function createMethodDefinition(args: Omit<Omit<MethodDefinition, "kind">, "type">): MethodDefinition;
export declare function createModuleDefinition(args: Omit<Omit<ModuleDefinition, "kind">, "type">): ModuleDefinition;
export declare function createImportedEnumDefinition(args: Omit<ImportedEnumDefinition, "kind">): ImportedEnumDefinition;
export declare const capabilityTypes: readonly ["getImplementations"];
export declare type CapabilityType = typeof capabilityTypes[number];
export declare function createCapability(args: {
    type: CapabilityType;
    enabled: boolean;
}): CapabilityDefinition;
export declare function createInterfaceDefinition(args: Omit<Omit<InterfaceDefinition, "kind">, "nativeType">): InterfaceDefinition;
export declare function createImportedModuleDefinition(args: Omit<Omit<ImportedModuleDefinition, "kind">, "type">): ImportedModuleDefinition;
export declare function createImportedObjectDefinition(args: Omit<ImportedObjectDefinition, "kind">): ImportedObjectDefinition;
export declare function createEnvDefinition(args: Omit<Omit<EnvDefinition, "kind">, "type">): EnvDefinition;
export declare function createImportedEnvDefinition(args: Omit<Omit<ImportedEnvDefinition, "kind">, "type">): ImportedEnvDefinition;
