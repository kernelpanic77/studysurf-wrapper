"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createImportedEnvDefinition = exports.createEnvDefinition = exports.createImportedObjectDefinition = exports.createImportedModuleDefinition = exports.createInterfaceDefinition = exports.createCapability = exports.capabilityTypes = exports.createImportedEnumDefinition = exports.createModuleDefinition = exports.createMethodDefinition = exports.createObjectPropertyDefinition = exports.createEnumPropertyDefinition = exports.createScalarPropertyDefinition = exports.createMapPropertyDefinition = exports.createArrayPropertyDefinition = exports.createInterfaceImplementedDefinition = exports.createPropertyDefinition = exports.createArrayDefinition = exports.createMapDefinition = exports.createUnresolvedObjectOrEnumRef = exports.createEnumRef = exports.createEnumDefinition = exports.createScalarDefinition = exports.createMapKeyDefinition = exports.createAnyDefinition = exports.createObjectRef = exports.createObjectDefinition = exports.createGenericDefinition = exports.isKind = exports.DefinitionKind = void 0;
var utils_1 = require("./utils");
var DefinitionKind;
(function (DefinitionKind) {
    DefinitionKind[DefinitionKind["Generic"] = 0] = "Generic";
    DefinitionKind[DefinitionKind["Object"] = 1] = "Object";
    DefinitionKind[DefinitionKind["Any"] = 2] = "Any";
    DefinitionKind[DefinitionKind["Scalar"] = 4] = "Scalar";
    DefinitionKind[DefinitionKind["Enum"] = 8] = "Enum";
    DefinitionKind[DefinitionKind["Array"] = 18] = "Array";
    DefinitionKind[DefinitionKind["Property"] = 34] = "Property";
    DefinitionKind[DefinitionKind["Method"] = 64] = "Method";
    DefinitionKind[DefinitionKind["Module"] = 128] = "Module";
    DefinitionKind[DefinitionKind["ImportedModule"] = 256] = "ImportedModule";
    DefinitionKind[DefinitionKind["ImportedEnum"] = 520] = "ImportedEnum";
    DefinitionKind[DefinitionKind["ImportedObject"] = 1025] = "ImportedObject";
    DefinitionKind[DefinitionKind["InterfaceImplemented"] = 2048] = "InterfaceImplemented";
    DefinitionKind[DefinitionKind["UnresolvedObjectOrEnum"] = 4096] = "UnresolvedObjectOrEnum";
    DefinitionKind[DefinitionKind["ObjectRef"] = 8192] = "ObjectRef";
    DefinitionKind[DefinitionKind["EnumRef"] = 16384] = "EnumRef";
    DefinitionKind[DefinitionKind["Interface"] = 32768] = "Interface";
    DefinitionKind[DefinitionKind["Env"] = 65536] = "Env";
    DefinitionKind[DefinitionKind["MapKey"] = 131072] = "MapKey";
    DefinitionKind[DefinitionKind["Map"] = 262146] = "Map";
    DefinitionKind[DefinitionKind["ImportedEnv"] = 524288] = "ImportedEnv";
})(DefinitionKind = exports.DefinitionKind || (exports.DefinitionKind = {}));
function isKind(type, kind) {
    return (type.kind & kind) === kind;
}
exports.isKind = isKind;
function createGenericDefinition(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.Generic });
}
exports.createGenericDefinition = createGenericDefinition;
function createObjectDefinition(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.Object });
}
exports.createObjectDefinition = createObjectDefinition;
function createObjectRef(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.ObjectRef });
}
exports.createObjectRef = createObjectRef;
function createAnyDefinition(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.Any });
}
exports.createAnyDefinition = createAnyDefinition;
function createMapKeyDefinition(args) {
    if (!utils_1.isMapKeyType(args.type)) {
        throw Error("createMapKeyDefinition: Unrecognized Map key type provided \"" + args.type + "\"");
    }
    return __assign(__assign({}, args), { kind: DefinitionKind.Scalar });
}
exports.createMapKeyDefinition = createMapKeyDefinition;
function createScalarDefinition(args) {
    if (!utils_1.isScalarType(args.type)) {
        throw Error("createScalarDefinition: Unrecognized scalar type provided \"" + args.type + "\"");
    }
    return __assign(__assign({}, args), { kind: DefinitionKind.Scalar });
}
exports.createScalarDefinition = createScalarDefinition;
function createEnumDefinition(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.Enum });
}
exports.createEnumDefinition = createEnumDefinition;
function createEnumRef(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.EnumRef });
}
exports.createEnumRef = createEnumRef;
function createUnresolvedObjectOrEnumRef(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.UnresolvedObjectOrEnum });
}
exports.createUnresolvedObjectOrEnumRef = createUnresolvedObjectOrEnumRef;
function createMapDefinition(args) {
    return __assign(__assign(__assign({}, args), createAnyDefinition(__assign(__assign({}, args), { array: args.value && isKind(args.value, DefinitionKind.Array)
            ? args.value
            : undefined, map: args.value && isKind(args.value, DefinitionKind.Map)
            ? args.value
            : undefined, scalar: args.value && isKind(args.value, DefinitionKind.Scalar)
            ? args.value
            : undefined, object: args.value && isKind(args.value, DefinitionKind.ObjectRef)
            ? args.value
            : undefined, enum: args.value && isKind(args.value, DefinitionKind.EnumRef)
            ? args.value
            : undefined, unresolvedObjectOrEnum: args.value && isKind(args.value, DefinitionKind.UnresolvedObjectOrEnum)
            ? args.value
            : undefined }))), { kind: DefinitionKind.Map });
}
exports.createMapDefinition = createMapDefinition;
function createArrayDefinition(args) {
    return __assign(__assign(__assign({}, args), createAnyDefinition(__assign(__assign({}, args), { array: args.item && isKind(args.item, DefinitionKind.Array)
            ? args.item
            : undefined, map: args.item && isKind(args.item, DefinitionKind.Map)
            ? args.item
            : undefined, scalar: args.item && isKind(args.item, DefinitionKind.Scalar)
            ? args.item
            : undefined, object: args.item && isKind(args.item, DefinitionKind.ObjectRef)
            ? args.item
            : undefined, enum: args.item && isKind(args.item, DefinitionKind.EnumRef)
            ? args.item
            : undefined, unresolvedObjectOrEnum: args.item && isKind(args.item, DefinitionKind.UnresolvedObjectOrEnum)
            ? args.item
            : undefined }))), { kind: DefinitionKind.Array });
}
exports.createArrayDefinition = createArrayDefinition;
function createPropertyDefinition(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.Property });
}
exports.createPropertyDefinition = createPropertyDefinition;
function createInterfaceImplementedDefinition(args) {
    return __assign(__assign({}, args), { kind: DefinitionKind.InterfaceImplemented });
}
exports.createInterfaceImplementedDefinition = createInterfaceImplementedDefinition;
function createArrayPropertyDefinition(args) {
    var comment = args.comment;
    delete args.comment;
    var result = createPropertyDefinition({
        name: args.name,
        type: args.type,
        required: args.required,
        array: createArrayDefinition(args),
    });
    return comment ? __assign(__assign({}, result), { comment: comment }) : result;
}
exports.createArrayPropertyDefinition = createArrayPropertyDefinition;
function createMapPropertyDefinition(args) {
    var comment = args.comment;
    delete args.comment;
    var result = createPropertyDefinition({
        name: args.name,
        type: args.type,
        required: args.required,
        map: createMapDefinition(args),
    });
    return comment ? __assign(__assign({}, result), { comment: comment }) : result;
}
exports.createMapPropertyDefinition = createMapPropertyDefinition;
function createScalarPropertyDefinition(args) {
    var comment = args.comment;
    delete args.comment;
    var result = createPropertyDefinition({
        name: args.name,
        type: args.type,
        required: args.required,
        scalar: createScalarDefinition(args),
    });
    return comment ? __assign(__assign({}, result), { comment: comment }) : result;
}
exports.createScalarPropertyDefinition = createScalarPropertyDefinition;
function createEnumPropertyDefinition(args) {
    var comment = args.comment;
    delete args.comment;
    var result = createPropertyDefinition({
        name: args.name,
        type: args.type,
        required: args.required,
        enum: createEnumRef(args),
    });
    return comment ? __assign(__assign({}, result), { comment: comment }) : result;
}
exports.createEnumPropertyDefinition = createEnumPropertyDefinition;
function createObjectPropertyDefinition(args) {
    var comment = args.comment;
    delete args.comment;
    var result = createPropertyDefinition({
        name: args.name,
        type: args.type,
        required: args.required,
        object: createObjectRef(args),
    });
    return comment ? __assign(__assign({}, result), { comment: comment }) : result;
}
exports.createObjectPropertyDefinition = createObjectPropertyDefinition;
function createMethodDefinition(args) {
    return __assign(__assign(__assign({}, args), createGenericDefinition(__assign(__assign({}, args), { type: "Method" }))), { required: true, kind: DefinitionKind.Method });
}
exports.createMethodDefinition = createMethodDefinition;
function createModuleDefinition(args) {
    return __assign(__assign(__assign({}, args), createGenericDefinition(__assign(__assign({}, args), { type: "Module" }))), { kind: DefinitionKind.Module });
}
exports.createModuleDefinition = createModuleDefinition;
function createImportedEnumDefinition(args) {
    return __assign(__assign(__assign({}, args), createEnumDefinition(args)), { kind: DefinitionKind.ImportedEnum });
}
exports.createImportedEnumDefinition = createImportedEnumDefinition;
// TODO: We don't want this hard coded
exports.capabilityTypes = ["getImplementations"];
function createCapability(args) {
    var _a;
    return _a = {},
        _a[args.type] = {
            enabled: args.enabled,
        },
        _a;
}
exports.createCapability = createCapability;
function createInterfaceDefinition(args) {
    return __assign(__assign(__assign({}, args), createGenericDefinition(args)), { nativeType: "Interface", kind: DefinitionKind.Interface });
}
exports.createInterfaceDefinition = createInterfaceDefinition;
function createImportedModuleDefinition(args) {
    if (!utils_1.isModuleType(args.nativeType)) {
        throw Error("createImportedModuleDefinition: Unrecognized module type provided \"" + args.nativeType + "\"");
    }
    return __assign(__assign(__assign({}, args), createGenericDefinition(__assign(__assign({}, args), { type: args.namespace + "_" + args.nativeType }))), { kind: DefinitionKind.ImportedModule });
}
exports.createImportedModuleDefinition = createImportedModuleDefinition;
function createImportedObjectDefinition(args) {
    return __assign(__assign(__assign({}, args), createObjectDefinition(args)), { kind: DefinitionKind.ImportedObject });
}
exports.createImportedObjectDefinition = createImportedObjectDefinition;
function createEnvDefinition(args) {
    return __assign(__assign(__assign({}, args), createObjectDefinition(__assign(__assign({}, args), { type: "Env" }))), { kind: DefinitionKind.Env });
}
exports.createEnvDefinition = createEnvDefinition;
function createImportedEnvDefinition(args) {
    return __assign(__assign(__assign({}, args), createObjectDefinition(__assign(__assign({}, args), { type: args.namespace + "_Env" }))), { kind: DefinitionKind.ImportedEnv });
}
exports.createImportedEnvDefinition = createImportedEnvDefinition;
//# sourceMappingURL=definitions.js.map