"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setPropertyType = void 0;
var __1 = require("../..");
var toBoolean = function (val) { return !!val; };
function setPropertyType(property, name, type) {
    var _a;
    if (__1.isScalarType(type.type)) {
        property.scalar = __1.createScalarDefinition({
            name: name,
            type: type.type,
            required: type.required,
        });
        return;
    }
    if (type.type === "Map") {
        if (toBoolean(type.required) !== toBoolean((_a = property.map) === null || _a === void 0 ? void 0 : _a.required)) {
            throw new Error("Map defined as " + (type.required ? "required" : "optional") + " while declaring type but defined as " + (property.required ? "required" : "optional") + " while annotating: " + property.type + " in " + property.name);
        }
        property.map = __assign(__assign(__assign({}, __1.createMapDefinition({
            type: type.type,
        })), property.map), { name: name, required: type.required });
        return;
    }
    property.unresolvedObjectOrEnum = __1.createUnresolvedObjectOrEnumRef({
        name: name,
        type: type.type,
        required: type.required,
    });
}
exports.setPropertyType = setPropertyType;
//# sourceMappingURL=property-utils.js.map