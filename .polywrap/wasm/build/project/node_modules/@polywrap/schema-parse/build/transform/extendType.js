"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extendType = void 0;
// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types
function extendType(extension) {
    return {
        enter: {
            Abi: function (abi) { return (__assign(__assign({}, abi), { extension: extension })); },
            // eslint-disable-next-line @typescript-eslint/naming-convention
            GenericDefinition: function (def) { return (__assign(__assign({}, def), extension)); },
        },
    };
}
exports.extendType = extendType;
//# sourceMappingURL=extendType.js.map