import * as api from "@opentelemetry/api";
export declare enum TracingLevel {
    Low = 0,
    Medium = 1,
    High = 2
}
export interface TracerConfig {
    tracingLevel: TracingLevel;
    consoleEnabled: boolean;
    consoleDetailed: boolean;
    httpEnabled: boolean;
    httpUrl: string;
}
export declare class Tracer {
    private static _config;
    private static _tracer;
    private static _provider;
    private static _spans;
    static enableTracing(tracerName: string, config: Partial<TracerConfig>): void;
    static disableTracing(): void;
    static startSpan(spanName: string, tracingLevel?: TracingLevel): void;
    static endSpan(tracingLevel?: TracingLevel): void;
    static setAttribute(attrName: string, data: unknown, tracingLevel?: TracingLevel): void;
    static addEvent(event: string, data?: unknown, tracingLevel?: TracingLevel): void;
    static recordException(error: api.Exception, tracingLevel?: TracingLevel): void;
    static traceMethod(span: string, tracingLevel?: TracingLevel): (target: unknown, key: string | symbol, descriptor: PropertyDescriptor) => PropertyDescriptor;
    static traceFunc<TArgs extends Array<unknown>, TReturn>(span: string, func: (...args: TArgs) => TReturn, tracingLevel?: TracingLevel): (...args: TArgs) => TReturn;
    static _initProvider(name: string): void;
    static _pushSpan(span: api.Span): void;
    static _currentSpan(): api.Span | undefined;
    static _popSpan(): void;
}
