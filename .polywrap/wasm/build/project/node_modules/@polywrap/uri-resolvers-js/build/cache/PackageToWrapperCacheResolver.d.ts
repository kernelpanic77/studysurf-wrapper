import { IWrapperCache } from "./IWrapperCache";
import { UriResolverLike } from "../helpers";
import { IUriResolver, Uri, Client, IUriResolutionContext, UriPackageOrWrapper } from "@polywrap/core-js";
import { DeserializeManifestOptions } from "@polywrap/wrap-manifest-types-js";
import { Result } from "@polywrap/result";
export declare class PackageToWrapperCacheResolver implements IUriResolver<Error> {
    private cache;
    private options?;
    name: string;
    resolverToCache: IUriResolver<Error>;
    constructor(cache: IWrapperCache, resolverToCache: UriResolverLike, options?: {
        deserializeManifestOptions?: DeserializeManifestOptions | undefined;
        resolverName?: string | undefined;
        endOnRedirect?: boolean | undefined;
    } | undefined);
    tryResolveUri(uri: Uri, client: Client, resolutionContext: IUriResolutionContext): Promise<Result<UriPackageOrWrapper, Error>>;
}
