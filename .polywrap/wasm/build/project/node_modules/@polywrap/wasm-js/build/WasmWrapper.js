"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WasmWrapper = void 0;
var imports_1 = require("./imports");
var constants_1 = require("./constants");
var createWasmWrapper_1 = require("./helpers/createWasmWrapper");
var msgpack_js_1 = require("@polywrap/msgpack-js");
var tracing_js_1 = require("@polywrap/tracing-js");
var asyncify_js_1 = require("@polywrap/asyncify-js");
var core_js_1 = require("@polywrap/core-js");
var result_1 = require("@polywrap/result");
var EMPTY_ENCODED_OBJECT = msgpack_js_1.msgpackEncode({});
var WasmWrapper = /** @class */ (function () {
    function WasmWrapper(_manifest, _fileReader) {
        this._manifest = _manifest;
        this._fileReader = _fileReader;
        tracing_js_1.Tracer.startSpan("WasmWrapper: constructor");
        tracing_js_1.Tracer.setAttribute("args", {
            manifest: this._manifest,
            fileReader: this._fileReader,
        });
        tracing_js_1.Tracer.endSpan();
    }
    WasmWrapper.from = function (manifestBufferOrFileReader, wasmModuleOrFileReaderOrManifestOptions, fileReaderOrManifestOptions, manifestOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, createWasmWrapper_1.createWasmWrapper(manifestBufferOrFileReader, wasmModuleOrFileReaderOrManifestOptions, fileReaderOrManifestOptions, manifestOptions)];
            });
        });
    };
    WasmWrapper.prototype.getFile = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var path, encoding, dataResult, data, decoder, text, error;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = options.path, encoding = options.encoding;
                        return [4 /*yield*/, this._fileReader.readFile(path)];
                    case 1:
                        dataResult = _a.sent();
                        // If nothing is returned, the file was not found
                        if (!dataResult.ok) {
                            return [2 /*return*/, result_1.ResultErr(Error("WasmWrapper: File was not found.\nSubpath: " + path))];
                        }
                        data = dataResult.value;
                        if (encoding) {
                            decoder = new TextDecoder(encoding);
                            text = decoder.decode(data);
                            if (!text) {
                                error = Error("WasmWrapper: Decoding the file's bytes array failed.\nBytes: " + data);
                                return [2 /*return*/, result_1.ResultErr(error)];
                            }
                            return [2 /*return*/, result_1.ResultOk(text)];
                        }
                        return [2 /*return*/, result_1.ResultOk(data)];
                }
            });
        });
    };
    WasmWrapper.prototype.getManifest = function () {
        return this._manifest;
    };
    WasmWrapper.prototype.invoke = function (options, client) {
        return __awaiter(this, void 0, void 0, function () {
            var method_1, args_1, wasmResult, error, wasm, state, abortWithInvokeAborted, abortWithInternalError, memory, instance, exports_1, result, invokeResult, error, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        tracing_js_1.Tracer.setAttribute("label", "WASM Wrapper invoked: " + options.uri.uri + ", with method " + options.method, tracing_js_1.TracingLevel.High);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        method_1 = options.method;
                        args_1 = options.args || {};
                        return [4 /*yield*/, this._getWasmModule()];
                    case 2:
                        wasmResult = _a.sent();
                        if (!wasmResult.ok) {
                            error = new core_js_1.WrapError(wasmResult.error, {
                                code: core_js_1.WrapErrorCode.WRAPPER_READ_FAIL,
                                uri: options.uri.uri,
                                method: method_1,
                                args: JSON.stringify(args_1, null, 2),
                            });
                            return [2 /*return*/, result_1.ResultErr(error)];
                        }
                        wasm = wasmResult.value;
                        state = {
                            invoke: {},
                            subinvoke: {
                                args: [],
                            },
                            subinvokeImplementation: {
                                args: [],
                            },
                            method: method_1,
                            args: args_1
                                ? core_js_1.isBuffer(args_1)
                                    ? args_1
                                    : msgpack_js_1.msgpackEncode(args_1)
                                : EMPTY_ENCODED_OBJECT,
                            env: options.env ? msgpack_js_1.msgpackEncode(options.env) : EMPTY_ENCODED_OBJECT,
                        };
                        abortWithInvokeAborted = function (message, source) {
                            var prev = core_js_1.WrapError.parse(message);
                            var text = prev ? "SubInvocation exception encountered" : message;
                            throw new core_js_1.WrapError(text, {
                                code: core_js_1.WrapErrorCode.WRAPPER_INVOKE_ABORTED,
                                uri: options.uri.uri,
                                method: method_1,
                                args: JSON.stringify(args_1, null, 2),
                                source: source,
                                innerError: prev,
                            });
                        };
                        abortWithInternalError = function (message) {
                            throw new core_js_1.WrapError(message, {
                                code: core_js_1.WrapErrorCode.WRAPPER_INTERNAL_ERROR,
                                uri: options.uri.uri,
                                method: method_1,
                                args: JSON.stringify(args_1, null, 2),
                            });
                        };
                        memory = asyncify_js_1.AsyncWasmInstance.createMemory({ module: wasm });
                        return [4 /*yield*/, asyncify_js_1.AsyncWasmInstance.createInstance({
                                module: wasm,
                                imports: imports_1.createImports({
                                    state: state,
                                    client: client,
                                    memory: memory,
                                    abortWithInvokeAborted: abortWithInvokeAborted,
                                    abortWithInternalError: abortWithInternalError,
                                }),
                                requiredExports: WasmWrapper.requiredExports,
                            })];
                    case 3:
                        instance = _a.sent();
                        exports_1 = instance.exports;
                        return [4 /*yield*/, exports_1._wrap_invoke(state.method.length, state.args.byteLength, state.env.byteLength)];
                    case 4:
                        result = _a.sent();
                        invokeResult = this._processInvokeResult(state, result);
                        if (invokeResult.ok) {
                            return [2 /*return*/, __assign(__assign({}, invokeResult), { encoded: true })];
                        }
                        else {
                            error = new core_js_1.WrapError(invokeResult.error, {
                                code: core_js_1.WrapErrorCode.WRAPPER_INVOKE_FAIL,
                                uri: options.uri.uri,
                                method: method_1,
                                args: JSON.stringify(args_1, null, 2),
                            });
                            return [2 /*return*/, result_1.ResultErr(error)];
                        }
                        return [3 /*break*/, 6];
                    case 5:
                        error_1 = _a.sent();
                        return [2 /*return*/, result_1.ResultErr(error_1)];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    WasmWrapper.prototype._processInvokeResult = function (state, result) {
        if (result) {
            if (!state.invoke.result) {
                return result_1.ResultErr("Invoke result is missing.");
            }
            return result_1.ResultOk(state.invoke.result);
        }
        else {
            if (!state.invoke.error) {
                return result_1.ResultErr("Invoke error is missing.");
            }
            return result_1.ResultErr(state.invoke.error);
        }
    };
    WasmWrapper.prototype._getWasmModule = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this._wasmModule === undefined)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this._fileReader.readFile(constants_1.WRAP_MODULE_PATH)];
                    case 1:
                        result = _a.sent();
                        if (!result.ok) {
                            return [2 /*return*/, result_1.ResultErr("Wrapper does not contain a wasm module")];
                        }
                        this._wasmModule = result.value;
                        _a.label = 2;
                    case 2: return [2 /*return*/, result_1.ResultOk(this._wasmModule)];
                }
            });
        });
    };
    WasmWrapper.requiredExports = ["_wrap_invoke"];
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getFile")
    ], WasmWrapper.prototype, "getFile", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getManifest")
    ], WasmWrapper.prototype, "getManifest", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: invoke", tracing_js_1.TracingLevel.High)
    ], WasmWrapper.prototype, "invoke", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: _processInvokeResult")
    ], WasmWrapper.prototype, "_processInvokeResult", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getWasmModule")
    ], WasmWrapper.prototype, "_getWasmModule", null);
    return WasmWrapper;
}());
exports.WasmWrapper = WasmWrapper;
//# sourceMappingURL=WasmWrapper.js.map