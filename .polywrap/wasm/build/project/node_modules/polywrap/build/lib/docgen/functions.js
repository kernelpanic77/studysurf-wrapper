"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addExtends = exports.addImplements = exports.toTitle = exports.addReturnsIfText = exports.markdownItalics = exports.hashtagPrefix = exports.typeFormatFilter = void 0;
var typeFormatFilter = function () {
    return function (text, render) {
        var rendered = render(text);
        if (rendered.startsWith("[")) {
            return rendered.substring(1, rendered.length - 1) + "[]";
        }
        return rendered;
    };
};
exports.typeFormatFilter = typeFormatFilter;
var hashtagPrefix = function () {
    return function (text, render) {
        var rendered = render(text);
        if (rendered === "") {
            return "";
        }
        return "# " + rendered;
    };
};
exports.hashtagPrefix = hashtagPrefix;
var markdownItalics = function () {
    return function (text, render) {
        var rendered = render(text);
        if (rendered === "") {
            return "";
        }
        return "_" + rendered + "_";
    };
};
exports.markdownItalics = markdownItalics;
var addReturnsIfText = function () {
    return function (text, render) {
        var rendered = render(text);
        if (rendered === "") {
            return "";
        }
        return "\n" + rendered + "\n";
    };
};
exports.addReturnsIfText = addReturnsIfText;
var toTitle = function () {
    return function (text, render) {
        var rendered = render(text);
        var tokens = rendered.split("_");
        for (var i = 0; i < tokens.length; i++) {
            tokens[i] = tokens[i].charAt(0).toUpperCase() + tokens[i].substring(1);
        }
        return tokens.join(" ");
    };
};
exports.toTitle = toTitle;
var addImplements = function () {
    return function (text, render) {
        var rendered = render(text);
        var trimmed = rendered.trim();
        if (!trimmed) {
            return "";
        }
        var tokens = trimmed.split(" ");
        return "implements " + tokens.join(", ");
    };
};
exports.addImplements = addImplements;
var addExtends = function () {
    return function (text, render) {
        var rendered = render(text);
        var trimmed = rendered.trim();
        if (!trimmed) {
            return "";
        }
        var tokens = trimmed.split(" ");
        return "@extends " + tokens.join(", ");
    };
};
exports.addExtends = addExtends;
//# sourceMappingURL=functions.js.map