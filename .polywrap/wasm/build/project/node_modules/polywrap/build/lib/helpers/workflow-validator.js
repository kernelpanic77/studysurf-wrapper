"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateOutput = exports.cueExists = void 0;
var system_1 = require("../system");
var intl_1 = require("../intl");
var workflow_1 = require("../workflow");
var path_1 = __importDefault(require("path"));
var fs_1 = __importDefault(require("fs"));
var os_1 = __importDefault(require("os"));
var TMPDIR = fs_1.default.mkdtempSync(path_1.default.join(os_1.default.tmpdir(), "polywrap-cli"));
function cueExists(logger) {
    var stdout = system_1.runCommandSync("cue version", logger).stdout;
    return stdout ? stdout.startsWith("cue version ") : false;
}
exports.cueExists = cueExists;
function validateOutput(output, validateScriptPath, logger) {
    if (!cueExists(logger)) {
        console.warn(intl_1.intlMsg.commands_run_error_cueDoesNotExist());
    }
    var id = output.id, data = output.data, error = output.error;
    var index = id.lastIndexOf(".");
    var jobId = id.substring(0, index);
    var stepId = id.substring(index + 1);
    var selector = jobId + ".\\$" + stepId;
    var jsonOutput = TMPDIR + "/" + id + ".json";
    fs_1.default.writeFileSync(jsonOutput, JSON.stringify({ data: data, error: error === null || error === void 0 ? void 0 : error.message }, null, 2));
    var stderr = system_1.runCommandSync("cue vet -d " + selector + " " + validateScriptPath + " " + jsonOutput, logger).stderr;
    if (fs_1.default.existsSync(jsonOutput)) {
        fs_1.default.unlinkSync(jsonOutput);
    }
    if (!stderr) {
        output.validation = { status: workflow_1.Status.SUCCEED };
    }
    else {
        process.exitCode = 1;
        output.validation = { status: workflow_1.Status.FAILED, error: stderr.stderr };
    }
}
exports.validateOutput = validateOutput;
//# sourceMappingURL=workflow-validator.js.map