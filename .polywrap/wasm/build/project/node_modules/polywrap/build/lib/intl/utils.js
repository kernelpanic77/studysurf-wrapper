"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIntl = void 0;
var intl_1 = require("@formatjs/intl");
var os_locale_1 = __importDefault(require("os-locale"));
var fs_1 = require("fs");
var fs = __importStar(require("fs"));
var cache = intl_1.createIntlCache();
function getIntl(locale) {
    if (locale === void 0) { locale = os_locale_1.default.sync(); }
    var localeData = getLocaleData(locale);
    return intl_1.createIntl({
        locale: localeData.lang,
        defaultLocale: "en",
        messages: localeData.messages,
    }, cache);
}
exports.getIntl = getIntl;
function getLocaleData(locale) {
    var supportedLangs = fs
        .readdirSync(__dirname + "/../../../lang/")
        .map(function (s) { return s.substring(0, 2); });
    var localeLang = locale.substring(0, 2);
    var lang = supportedLangs.includes(localeLang) ? localeLang : "en";
    var messages;
    try {
        messages = JSON.parse(fs_1.readFileSync(__dirname + "/../../../lang/" + lang + ".json", "utf-8"));
    }
    catch (e) {
        console.log("Language data for locale " + locale + " is incomplete or malformed. Using default language instead.");
        messages = JSON.parse(fs_1.readFileSync(__dirname + "/../../../lang/en.json", "utf-8"));
    }
    return {
        lang: lang,
        messages: messages,
    };
}
//# sourceMappingURL=utils.js.map