"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsoleLog = void 0;
var Log_1 = require("../Log");
var chalk_1 = __importDefault(require("chalk"));
var logging_js_1 = require("@polywrap/logging-js");
var ConsoleLog = /** @class */ (function (_super) {
    __extends(ConsoleLog, _super);
    function ConsoleLog(level) {
        return _super.call(this, level) || this;
    }
    ConsoleLog.prototype.log = function (message, level) {
        if (level < this.level) {
            return;
        }
        switch (level) {
            case logging_js_1.LogLevel.DEBUG:
                console.debug(chalk_1.default.gray(message));
                break;
            case logging_js_1.LogLevel.INFO:
                console.info(message);
                break;
            case logging_js_1.LogLevel.WARN:
                console.warn(chalk_1.default.yellow(message));
                break;
            case logging_js_1.LogLevel.ERROR:
                console.error(chalk_1.default.red(message));
                break;
        }
    };
    return ConsoleLog;
}(Log_1.Log));
exports.ConsoleLog = ConsoleLog;
//# sourceMappingURL=ConsoleLog.js.map