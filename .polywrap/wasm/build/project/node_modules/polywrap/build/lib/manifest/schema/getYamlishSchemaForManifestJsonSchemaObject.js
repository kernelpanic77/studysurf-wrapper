"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getYamlishSchemaForManifestJsonSchemaObject = void 0;
function getYamlishSchemaForManifestJsonSchemaObject(schema, name, description, indent) {
    if (name === void 0) { name = ""; }
    if (description === void 0) { description = ""; }
    if (indent === void 0) { indent = 0; }
    var output = "";
    if (name.length) {
        output += name + ":  # " + description + "\n";
    }
    for (var prop in schema) {
        var schemaProperty = schema[prop];
        if (schemaProperty.type === "object") {
            output += getYamlishSchemaForManifestJsonSchemaObject(schemaProperty.properties, prop, schemaProperty.description, indent + 1);
        }
        else {
            output +=
                getYamlishJsonSchemaPropertyString(schemaProperty, prop, indent) + "\n";
        }
    }
    return output;
}
exports.getYamlishSchemaForManifestJsonSchemaObject = getYamlishSchemaForManifestJsonSchemaObject;
function getYamlishJsonSchemaPropertyString(property, propName, indent) {
    if (indent === void 0) { indent = 0; }
    var output = "";
    for (var i = 0; i < indent; i++) {
        output += "  ";
    }
    output += propName + ":  # " + property.description;
    var propEnum = property.enum;
    if (propEnum) {
        output += " Values: ";
        for (var j = 0; j < propEnum.length; j++) {
            output += "" + propEnum[j];
            if (j !== propEnum.length - 1) {
                output += ", ";
            }
        }
    }
    return output;
}
//# sourceMappingURL=getYamlishSchemaForManifestJsonSchemaObject.js.map