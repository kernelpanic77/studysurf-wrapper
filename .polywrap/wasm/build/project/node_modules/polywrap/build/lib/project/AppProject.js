"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppProject = void 0;
var _1 = require(".");
var manifests_1 = require("./manifests");
var schema_bind_1 = require("@polywrap/schema-bind");
var path_1 = __importDefault(require("path"));
var AppProject = /** @class */ (function (_super) {
    __extends(AppProject, _super);
    function AppProject(_config) {
        var _this = _super.call(this, _config, {
            rootDir: _config.rootDir,
            subDir: AppProject.cacheLayout.root,
        }) || this;
        _this._config = _config;
        return _this;
    }
    /// Project Based Methods
    AppProject.prototype.reset = function () {
        this._appManifest = undefined;
        this._cache.resetCache();
    };
    AppProject.prototype.validate = function () {
        return __awaiter(this, void 0, void 0, function () {
            var manifest;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getManifest()];
                    case 1:
                        manifest = _a.sent();
                        // Validate language
                        _1.Project.validateManifestLanguage(manifest.project.type, manifests_1.appManifestLanguages, manifests_1.isAppManifestLanguage);
                        return [2 /*return*/];
                }
            });
        });
    };
    /// Manifest (polywrap.app.yaml)
    AppProject.prototype.getName = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getManifest()];
                    case 1: return [2 /*return*/, (_a.sent()).project.name];
                }
            });
        });
    };
    AppProject.prototype.getManifest = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!!this._appManifest) return [3 /*break*/, 2];
                        _a = this;
                        return [4 /*yield*/, manifests_1.loadAppManifest(this.getManifestPath(), this.logger)];
                    case 1:
                        _a._appManifest = _b.sent();
                        _b.label = 2;
                    case 2: return [2 /*return*/, Promise.resolve(this._appManifest)];
                }
            });
        });
    };
    AppProject.prototype.getManifestDir = function () {
        return path_1.default.dirname(this._config.appManifestPath);
    };
    AppProject.prototype.getManifestPath = function () {
        return this._config.appManifestPath;
    };
    AppProject.prototype.getManifestLanguage = function () {
        return __awaiter(this, void 0, void 0, function () {
            var language;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getManifest()];
                    case 1:
                        language = (_a.sent()).project.type;
                        _1.Project.validateManifestLanguage(language, manifests_1.appManifestLanguages, manifests_1.isAppManifestLanguage);
                        return [2 /*return*/, language];
                }
            });
        });
    };
    /// Schema
    AppProject.prototype.getSchemaNamedPath = function () {
        return __awaiter(this, void 0, void 0, function () {
            var manifest, dir;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getManifest()];
                    case 1:
                        manifest = _a.sent();
                        dir = this.getManifestDir();
                        return [2 /*return*/, path_1.default.join(dir, manifest.source.schema)];
                }
            });
        });
    };
    AppProject.prototype.getImportAbis = function () {
        return __awaiter(this, void 0, void 0, function () {
            var manifest;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getManifest()];
                    case 1:
                        manifest = _a.sent();
                        return [2 /*return*/, manifest.source.import_abis || []];
                }
            });
        });
    };
    AppProject.prototype.generateSchemaBindings = function (abi, generationSubPath) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            var _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _a = schema_bind_1.bindSchema;
                        _c = {};
                        return [4 /*yield*/, this.getName()];
                    case 1:
                        _c.projectName = _d.sent(),
                            _c.abi = abi,
                            _c.outputDirAbs = this._getGenerationDirectory(generationSubPath);
                        _b = manifests_1.appManifestLanguageToBindLanguage;
                        return [4 /*yield*/, this.getManifestLanguage()];
                    case 2: return [2 /*return*/, _a.apply(void 0, [(_c.bindLanguage = _b.apply(void 0, [_d.sent()]),
                                _c)])];
                }
            });
        });
    };
    AppProject.prototype._getGenerationDirectory = function (generationSubPath) {
        if (generationSubPath === void 0) { generationSubPath = "src/wrap"; }
        return path_1.default.join(this.getManifestDir(), generationSubPath);
    };
    AppProject.cacheLayout = {
        root: "app",
    };
    return AppProject;
}(_1.Project));
exports.AppProject = AppProject;
//# sourceMappingURL=AppProject.js.map