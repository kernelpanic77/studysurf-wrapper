"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.outputManifest = void 0;
var __1 = require("../../");
var os_js_1 = require("@polywrap/os-js");
var yaml_1 = __importDefault(require("yaml"));
var path_1 = __importDefault(require("path"));
var fs_1 = __importDefault(require("fs"));
function outputManifest(manifest, manifestPath, logger) {
    return __awaiter(this, void 0, void 0, function () {
        var run;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    run = function () {
                        var removeUndefinedProps = function (obj) {
                            if (!obj || typeof obj !== "object") {
                                return undefined;
                            }
                            if (Array.isArray(obj)) {
                                return obj;
                            }
                            var input = obj;
                            var newObj = {};
                            Object.keys(input).forEach(function (key) {
                                if (input[key]) {
                                    if (typeof input[key] === "object") {
                                        var result = removeUndefinedProps(input[key]);
                                        if (result) {
                                            newObj[key] = result;
                                        }
                                    }
                                    else if (!key.startsWith("__")) {
                                        newObj[key] = input[key];
                                    }
                                }
                            });
                            return newObj;
                        };
                        var sanitizedManifest = removeUndefinedProps(manifest);
                        var isYaml = manifestPath.endsWith(".yaml") || manifestPath.endsWith(".yml");
                        var str = isYaml
                            ? yaml_1.default.stringify(sanitizedManifest, null, 2)
                            : JSON.stringify(sanitizedManifest, null, 2);
                        if (!str) {
                            var noDumpMessage = __1.intlMsg.lib_helpers_manifest_unableToDump({
                                manifest: "" + manifest,
                            });
                            throw Error(noDumpMessage);
                        }
                        // Create folders if they don't exist
                        var manifestDir = path_1.default.dirname(manifestPath);
                        if (!fs_1.default.existsSync(manifestDir)) {
                            fs_1.default.mkdirSync(manifestDir, { recursive: true });
                        }
                        os_js_1.writeFileSync(manifestPath, str, "utf-8");
                    };
                    manifestPath = __1.displayPath(manifestPath);
                    return [4 /*yield*/, __1.logActivity(logger, __1.intlMsg.lib_helpers_manifest_outputText({
                            path: os_js_1.normalizePath(manifestPath),
                        }), __1.intlMsg.lib_helpers_manifest_outputError({
                            path: os_js_1.normalizePath(manifestPath),
                        }), __1.intlMsg.lib_helpers_manifest_outputWarning({
                            path: os_js_1.normalizePath(manifestPath),
                        }), function () {
                            return Promise.resolve(run());
                        })];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.outputManifest = outputManifest;
//# sourceMappingURL=output.js.map