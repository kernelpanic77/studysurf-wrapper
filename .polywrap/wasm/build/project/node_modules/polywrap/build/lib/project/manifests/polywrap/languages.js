"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.polywrapManifestLanguageToBindLanguage = exports.isPolywrapManifestLanguage = exports.polywrapManifestLanguages = void 0;
var intl_1 = require("../../../intl");
exports.polywrapManifestLanguages = {
    "wasm/assemblyscript": "wasm/assemblyscript",
    "wasm/rust": "wasm/rust",
    interface: "interface",
};
function isPolywrapManifestLanguage(language) {
    return language in exports.polywrapManifestLanguages;
}
exports.isPolywrapManifestLanguage = isPolywrapManifestLanguage;
function polywrapManifestLanguageToBindLanguage(manifestLanguage) {
    switch (manifestLanguage) {
        case "wasm/assemblyscript":
            return "wasm-as";
        case "wasm/rust":
            return "wasm-rs";
        case "interface":
            throw Error(intl_1.intlMsg.lib_language_noInterfaceCodegen());
        default:
            throw Error(intl_1.intlMsg.lib_language_unsupportedManifestLanguage({
                language: manifestLanguage,
                supported: Object.keys(exports.polywrapManifestLanguages).join(", "),
            }));
    }
}
exports.polywrapManifestLanguageToBindLanguage = polywrapManifestLanguageToBindLanguage;
//# sourceMappingURL=languages.js.map