import { Project, ProjectConfig } from ".";
import { AppManifestLanguage } from "./manifests";
import { AppManifest } from "@polywrap/polywrap-manifest-types-js";
import { BindOutput } from "@polywrap/schema-bind";
import { WrapAbi } from "@polywrap/wrap-manifest-types-js";
export interface AppProjectConfig extends ProjectConfig {
    appManifestPath: string;
}
export declare class AppProject extends Project<AppManifest> {
    protected _config: AppProjectConfig;
    private _appManifest;
    static cacheLayout: {
        root: string;
    };
    constructor(_config: AppProjectConfig);
    reset(): void;
    validate(): Promise<void>;
    getName(): Promise<string>;
    getManifest(): Promise<AppManifest>;
    getManifestDir(): string;
    getManifestPath(): string;
    getManifestLanguage(): Promise<AppManifestLanguage>;
    getSchemaNamedPath(): Promise<string>;
    getImportAbis(): Promise<AppManifest["source"]["import_abis"]>;
    generateSchemaBindings(abi: WrapAbi, generationSubPath?: string): Promise<BindOutput>;
    private _getGenerationDirectory;
}
