{
  "commands_common_options_configPath": "config-path",
  "commands_common_options_config": "Add custom configuration to the PolywrapClient",
  "commands_common_options_verbose": "Verbose output (default: false)",
  "commands_common_options_quiet": "Suppress output (default: false)",
  "commands_build_description": "Build Polywrap Projects (type: interface, wasm)",
  "commands_build_error_manifestPathMissing": "{option} option missing {argument} argument",
  "commands_build_error_manifestNotFound": "Manifest not found. Search paths used: {paths}",
  "commands_build_error_outputDirMissingPath": "{option} option missing {argument} argument",
  "commands_build_keypressListener_exit": "Exit: [CTRL + C], [ESC], or [Q]",
  "commands_build_keypressListener_watching": "Watching",
  "commands_build_options_h": "Show usage information",
  "commands_build_options_m": "Path to the Polywrap Build manifest file (default: {default})",
  "commands_build_options_o": "Output directory for build results (default: {default})",
  "commands_build_options_o_path": "path",
  "commands_build_options_options": "options",
  "commands_build_options_t": "Use the development server's ENS instance",
  "commands_build_options_n": "Skip code generation",
  "commands_build_options_w": "Automatically rebuild when changes are made (default: false)",
  "commands_build_options_s": "Strategy to use for building the wrapper",
  "commands_build_options_s_strategy": "strategy",
  "commands_build_info_interface_no_strategy": "Interface projects do not use build strategies. Building without a strategy...",
  "commands_infra_description": "Modular Infrastructure-As-Code Orchestrator",
  "commands_infra_actions_subtitle": "Infra allows you to execute the following commands:",
  "commands_infra_options_options": "options",
  "commands_infra_options_i_node": "node",
  "commands_infra_options_h": "Show usage information",
  "commands_infra_options_o": "Use only specified modules",
  "commands_infra_options_o_module": "module",
  "commands_infra_options_d": "Run in detached mode",
  "commands_infra_options_m_path": "path",
  "commands_infra_options_m": "Path to the Polywrap Infra manifest file (default: {default})",
  "commands_infra_command_up": "Start Polywrap infrastructure",
  "commands_infra_command_down": "Stop Polywrap infrastructure",
  "commands_infra_command_vars": "Show Polywrap infrastructure's required .env variables",
  "commands_infra_command_config": "Validate and display Polywrap infrastructure's bundled docker-compose manifest",
  "commands_infra_error_never": "This should never happen...",
  "commands_infra_error_noCommand": "No command given",
  "commands_infra_error_unrecognizedCommand": "Unrecognized command: {command}",
  "commands_infra_error_noModulesMatch": "{modules} did not match any module names",
  "commands_infra_error_noModulesDeclared": "No modules declared",
  "commands_infra_modulesUsed_text": "Using infra modules",
  "commands_infra_options_command": "command",
  "commands_infra_options_start": "Startup the test env",
  "commands_infra_options_stop": "Shutdown the test env",
  "commands_infra_options_env_vars": "Show environment variables",
  "commands_infra_shutdown_error": "Failed to shutdown test environment",
  "commands_infra_shutdown_text": "Shutting down test environment...",
  "commands_infra_shutdown_warning": "Warning shutting down test environment",
  "commands_infra_startup_error": "Failed to start test environment",
  "commands_infra_startup_text": "Starting test environment...",
  "commands_infra_startup_warning": "Warning starting test environment",
  "commands_infra_vars_text": "Extracting environment variables",
  "commands_infra_vars_warning": "Warning extracting environment variables",
  "commands_infra_vars_error": "Error extracting environment variables",
  "commands_infra_manifest_text": "Aggregating manifest",
  "commands_infra_manifest_warning": "Warning aggregating manifest",
  "commands_infra_manifest_error": "Error aggregating manifest",
  "commands_build_uriViewers": "URI Viewers",
  "commands_deploy_description": "Deploys Polywrap Projects",
  "commands_deploy_options_options": "options",
  "commands_deploy_options_o_path": "path",
  "commands_deploy_options_o_string": "string",
  "commands_deploy_options_h": "Show usage information",
  "commands_deploy_options_m": "Path to the Polywrap Deploy manifest file (default: {default})",
  "commands_deploy_options_o": "Output file path for the deploy result",
  "commands_deploy_options_n": "Name of the deployment to execute",
  "commands_deploy_options_c": "Argument for deployment's publish step, in case deploy step is absent",
  "commands_deploy_options_p": "Path to the build directory",
  "commands_deploy_error_manifestPathMissing": "{option} option missing {argument} argument",
  "commands_deploy_error_pathMissing": "{option} option missing {argument} argument",
  "commands_deploy_error_nameMissing": "{option} option missing {argument} argument",
  "commands_deploy_error_cidMissing": "{option} option missing {argument} argument",
  "commands_codegen_description": "Generate Code For Polywrap Projects",
  "commands_codegen_error_domain": "domain",
  "commands_codegen_error_optionMissingArgument": "{option} option missing {argument} argument",
  "commands_codegen_options_codegen": "Output directory for the generated code (default: {default})",
  "commands_codegen_options_e": "ENS address to lookup external schemas (default: 0x0000...2e1e)",
  "commands_codegen_options_e_address": "address",
  "commands_codegen_options_h": "Show usage information",
  "commands_codegen_options_s": "Path to a custom generation script (JavaScript | TypeScript)",
  "commands_codegen_options_i": "IPFS node to load external schemas (default: ipfs.io & localhost)",
  "commands_codegen_options_i_node": "node",
  "commands_codegen_options_m": "Path to the Polywrap manifest file (default: {default})",
  "commands_codegen_options_o": "Output directory for custom generated types (default: 'types/')",
  "commands_codegen_options_o_path": "path",
  "commands_codegen_success": "Types were generated successfully",
  "commands_codegen_options_publish": "Output path for the built schema and manifest (default: {default})",
  "commands_docgen_description": "Generate wrapper documentation",
  "commands_docgen_success": "Docs were generated successfully",
  "commands_docgen_default": "default",
  "commands_docgen_options_c": "Output directory for generated docs (default: {default})",
  "commands_docgen_options_m": "Path to the project manifest file (default: {default})",
  "commands_docgen_options_schema": "Generate GraphQL schema",
  "commands_docgen_options_markdown": "Generate {framework} markdown",
  "commands_docgen_options_i": "Also generate docs for dependencies",
  "commands_docgen_error_manifestNotFound": "Manifest not found. Search paths used: {paths}",
  "commands_docgen_error_projectLoadFailed": "Could not load project form the given manifest. Manifest: `{manifestFile}`",
  "commands_create_description": "Create New Projects",
  "commands_create_directoryExists": "Directory with name {dir} already exists",
  "commands_create_error_commandFail": "Command failed: {error}",
  "commands_create_error_noCommand": "Please provide a command",
  "commands_create_error_noLang": "Please provide a language",
  "commands_create_error_noName": "Please provide a project name",
  "commands_create_error_outputDirMissingPath": "{option} option missing {argument} argument",
  "commands_create_error_unrecognizedCommand": "Unrecognized command",
  "commands_create_error_unrecognizedLanguage": "Unrecognized language",
  "commands_create_options_command": "command",
  "commands_create_options_commands": "Commands",
  "commands_create_options_createApp": "Create a Polywrap application",
  "commands_create_options_createPlugin": "Create a Polywrap plugin",
  "commands_create_options_createProject": "Create a Polywrap wasm wrapper",
  "commands_create_options_h": "Show usage information",
  "commands_create_options_lang": "lang",
  "commands_create_options_langs": "langs",
  "commands_create_options_o": "Output directory for the new project",
  "commands_create_options_o_path": "path",
  "commands_create_options_projectName": "project-name",
  "commands_create_overwritePrompt": "Do you want to overwrite this directory?",
  "commands_create_overwriting": "Overwriting {dir}...",
  "commands_create_readyApp": "You are ready to build an app using Polywrap",
  "commands_create_readyPlugin": "You are ready to build a plugin into a Polywrap",
  "commands_create_readyProtocol": "You are ready to turn your protocol into a Polywrap",
  "commands_create_settingUp": "Setting everything up...",
  "commands_run_options_workflow": "workflow",
  "commands_run_options_workflowScript": "Path to workflow script",
  "commands_run_options_outputFilePath": "output-file-path",
  "commands_run_options_validateScript": "Validate the output of the workflow jobs",
  "commands_run_options_validate": "cue-file",
  "commands_run_options_outputFile": "Output file path for the workflow result",
  "commands_run_options_m_path": "path",
  "commands_run_options_m": "Path to the Polywrap Workflow manifest file (default: {default})",
  "commands_run_options_jobIds": "jobs",
  "commands_run_options_jobs": "Specify ids of jobs that you want to run",
  "commands_run_error_validatorNotFound": "validate script not found at: {path}",
  "commands_run_error_outputFileMissing": "{option} option missing {argument} argument",
  "commands_run_error_clientConfigMissingPath": "{option} option missing {argument} argument",
  "commands_run_error_clientConfigModuleMissingExport": "Custom client config module missing named export 'getClientConfig' at {module}",
  "commands_run_error_clientConfigInvalidFileExt": "Custom client config file: {module} must be a JS/TS file",
  "commands_run_error_clientConfigNotObject": "Custom client config must be an object",
  "commands_run_error_redirectsExportNotArray": "Exported redirects must be an array",
  "commands_run_error_redirectsItemNotValid": "Redirect at index {index} must be an object with properties 'from' and 'to'",
  "commands_run_error_redirectsItemFromNotString": "Redirect property 'from' at index {index} must be a valid wrap:// URI string",
  "commands_run_error_redirectsItemToNotStringOrObject": "Redirect property 'to' at index {index} must be a valid wrap:// URI string, or a plugin",
  "commands_run_error_redirectsItemToNotValidPlugin": "Redirect property 'to' at index {index} must be a valid plugin instance",
  "commands_run_error_pluginsExportNotArray": "Exported plugins must be an array",
  "commands_run_error_pluginsItemNotObject": "Plugin at index {index} must be an object with properties 'uri' and 'plugin'",
  "commands_run_error_pluginsItemUriNotString": "Plugin property 'uri' at index {index} must be a valid wrap:// URI string",
  "commands_run_error_pluginsItemPluginNotObject": "Plugin property 'plugin' at index {index} must be an object with properties 'factory' and 'manifest'",
  "commands_run_error_pluginsItemPluginFactoryNotFunction": "Plugin property 'plugin.factory' at index {index} must be a function",
  "commands_run_error_pluginsItemPluginManifestNotObject": "Plugin property 'plugin.manifest' at index {index} must be an object",
  "commands_run_error_interfacesExportNotArray": "Exported interfaces must be an array",
  "commands_run_error_interfacesItemNotObject": "Interface at index {index} must be an object with properties 'interface' and 'implementations'",
  "commands_run_error_interfacesItemInterfaceNotString": "Interface property 'interface' at index {index} must be a valid wrap:// URI string",
  "commands_run_error_interfacesItemImplementationsNotArray": "Interface property 'implementations' at index {index} must be an array",
  "commands_run_error_interfacesItemImplementationsEmpty": "Interface property 'implementations' at index {index} must not be an empty array",
  "commands_run_error_interfacesItemImplementationsItemNotString": "Implementation at index ({index}, {implementationIndex}) must be a valid wrap:// URI string",
  "commands_run_error_envsExportNotArray": "Exported envs must be an array",
  "commands_run_error_envsItemNotObject": "Env at index {index} must be an object with properties 'uri'",
  "commands_run_error_envsItemUriNotString": "Env property 'uri' at index {index} must be a valid wrap:// URI string",
  "commands_run_error_envsItemModuleNotObject": "Env property 'env' at index {index} must be an object",
  "commands_run_description": "Runs Workflows",
  "commands_run_error_missingScript": "Required argument {script} is missing",
  "commands_run_error_noApi": "API needs to be initialized",
  "commands_run_error_readFail": "Failed to read query {query}",
  "commands_run_error_unsupportedOutputFileExt": "Unsupported outputFile extention: {outputFileExt}",
  "commands_run_error_cueDoesNotExist": "Require cue to run validator, checkout https://cuelang.org/ for more information",
  "commands_run_error_noWorkflowScriptFound": "Workflow script not found at path: {path}",
  "commands_run_error_noTestEnvFound": "polywrap test-env not found, please run 'polywrap infra up --modules=eth-ens-ipfs'",
  "commands_polywrap_error_notACommand": "is not a command",
  "commands_polywrap_helpPrompt": "Type {command} to view common commands",
  "commands_manifest_description": "Inspect & Migrade Polywrap Manifests",
  "commands_manifest_options_m": "Path to the manifest file (default: {default})",
  "commands_manifest_options_f": "Target format to migrate to (defaults to latest)",
  "commands_manifest_options_t": "Type of manifest file to migrate (default: {default})",
  "commands_manifest_options_m_path": "path",
  "commands_manifest_options_m_format": "format",
  "commands_manifest_options_t_type": "type",
  "commands_manifest_command_s": "Prints out the schema for the current manifest format.",
  "commands_manifest_command_m": "Migrates the polywrap project manifest to the latest version.",
  "commands_manifest_command_s_option_r": "Output raw JSON Schema",
  "commands_manifest_command_m_preserveManifestMessage": "Saved previous version of manifest to {preservedFilePath}",
  "commands_manifest_command_m_migrateManifestMessage": "Migrating {manifestFile} to version {version}",
  "commands_manifest_formatError": "Unsupported manifest format. Please make sure that you have the 'format' field present in {fileName} with one of the following values: {values}",
  "commands_manifest_migrate_targetFormatError": "Unsupported target format. Supported formats: {formats}",
  "commands_manifest_projectTypeError": "Unsupported project type.",
  "lib_codeGenerator_genCodeError": "Failed to generate types",
  "lib_codeGenerator_genCodeText": "Generate types",
  "lib_codeGenerator_genCodeWarning": "Warnings while generating types",
  "lib_codeGenerator_genTemplateStep": "Generating types from {path}",
  "lib_codeGenerator_wrongGenFile": "The generation file provided is wrong.",
  "lib_codeGenerator_templateNoModify": "NOTE: This is generated by 'polywrap codegen', DO NOT MODIFY",
  "lib_codeGenerator_nogenerateBindingMethod": "The generation file provided doesn't have the 'generateBinding' method.",
  "lib_codeGenerator_noComposedSchema": "The schema does not exist, please define one.",
  "lib_codeGenerator_abiMissing": "The ABI is missing from the composer output.",
  "lib_compiler_compileError": "Failed to compile Polywrap",
  "lib_compiler_compileText": "Compile Polywrap",
  "lib_compiler_compileWarning": "Warnings while compiling Polywrap",
  "lib_compiler_codegenError": "Failed to generate Polywrap schema bindings",
  "lib_compiler_codegenText": "Codegen Polywrap schema bindings",
  "lib_compiler_codegenWarning": "Warnings while generating Polywrap schema bindings",
  "lib_compiler_compileWasmModulesError": "Failed to compile Wasm modules",
  "lib_compiler_compileWasmModulesText": "Compile Wasm modules",
  "lib_compiler_compileWasmModulesWarning": "Warnings while compiling Wasm modules",
  "lib_compiler_failedAbiReturn": "Abi composer failed to return a combined abi.",
  "lib_compiler_noModulesToBuild": "No modules to build declared.",
  "lib_compiler_missingModule": "Missing module definition",
  "lib_compiler_noInterfaceModule": "Interfaces cannot have implementation file",
  "lib_compiler_step": "Compiling WASM module",
  "lib_compiler_noNodeModules": "could not locate {folder} in parent directories of polywrap manifest",
  "lib_compiler_noInvoke": "WASM module is missing the _wrap_invoke export. This should never happen...",
  "lib_compiler_invalid_module": "Invalid Wasm module found. {modulePath} is invalid. Error: {error}",
  "lib_compiler_cannotBuildInterfaceModules": "Cannot build modules for an Interface Polywrap",
  "lib_compiler_outputMetadataText": "Metadata written",
  "lib_compiler_outputMetadataError": "Failed to output metadata",
  "lib_compiler_outputMetadataWarning": "Warnings writing metadata",
  "lib_compiler_outputMetadataFileText": "Metadata written to {path}",
  "lib_schemaComposer_abi_not_found": "ABI not found at {path}",
  "lib_schemaComposer_unknown_abi": "Unknown ABI type at {path}. Supported types: {types}",
  "lib_schemaComposer_invalid_yaml": "Invalid YAML at {path}",
  "lib_generators_projectGenerator_fallback": "Falling back to the local Yarn cache.",
  "lib_generators_projectGenerator_offline": "You appear to be offline.",
  "lib_helpers_manifest_loadError": "Failed to load manifest from {path}",
  "lib_helpers_manifest_loadText": "Manifest loaded from {path}",
  "lib_helpers_manifest_loadWarning": "Warnings loading manifest from {path}",
  "lib_helpers_deployManifestExt_loadError": "Failed to load deploy manifest extension from {path}",
  "lib_helpers_deployManifestExt_loadText": "Load manifest extension from {path}",
  "lib_helpers_deployManifestExt_loadWarning": "No manifest extension found in {path}",
  "lib_helpers_manifest_outputError": "Failed to output manifest to {path}",
  "lib_helpers_manifest_outputText": "Manifest written to {path}",
  "lib_helpers_manifest_outputWarning": "Warnings writing manifest to {path}",
  "lib_helpers_manifest_unableToDump": "Unable to dump manifest: {manifest}",
  "lib_helpers_manifest_unableToLoad": "Unable to load manifest: {path}",
  "lib_helpers_copyText": "Artifacts written to {path}",
  "lib_helpers_copyError": "Failed to write build artifacts to {path}",
  "lib_helpers_copyWarning": "Warnings write build artifacts to {path}",
  "lib_helpers_docker_copyText": "Artifacts written to {path} from the image `{image}`",
  "lib_helpers_docker_couldNotConnect": "Could not connect to the Docker daemon. Is the docker daemon running?",
  "lib_helpers_docker_copyError": "Failed to write build artifacts to {path} from the image `{image}`",
  "lib_helpers_docker_copyWarning": "Warnings write build artifacts to {path} from the image `{image}`",
  "lib_helpers_docker_buildText": "Building source image `{image}` using dockerfile `{dockerfile}` in context `{context}`",
  "lib_helpers_docker_buildError": "Error while building source image `{image}` using dockerfile `{dockerfile}` in context `{context}`",
  "lib_helpers_docker_buildWarning": "Warnings while building image `{image}` using dockerfile `{dockerfile}` in context `{context}`",
  "lib_helpers_docker_buildVMText": "Building sources in Docker container`",
  "lib_helpers_docker_buildVMError": "Error while building sources in Docker container",
  "lib_helpers_docker_buildVMWarning": "Warnings while building sources in Docker container",
  "lib_helpers_buildText": "Building sources",
  "lib_helpers_buildError": "Error while building sources",
  "lib_helpers_buildWarning": "Warnings while building sources",
  "lib_helpers_docker_projectFolderMissing": "Build image `{image}` missing /project folder",
  "lib_helpers_docker_projectBuildFolderMissing": "Build image `{image}` missing build artifact `{artifact}` in folder /project/build",
  "lib_helpers_parameters_unexpectedValue": "Unexpected value provided for one or more of {options}. See --help for more information.",
  "lib_language_unsupportedManifestLanguage": "The manifest's language {language} is not supported. Please use one of the supported lanauges: {supported}",
  "lib_language_noInterfaceCodegen": "Code generation cannot be run for Polywrap Interface projects",
  "lib_system_env_var_not_found": "Environment variable not found: `{variableName}`",
  "lib_publishers_ipfsPublisher_urlMalformed": "IPFS URL Malformed",
  "lib_project_invalid_manifest_language": "Unrecognized manifest language `{language}`. Fix: Please modify your polywrap.yaml file to include a valid language field. Supported Manifest Languages: {validTypes}",
  "lib_project_invalid_manifest_language_pathed": "Unsupported manifest language `{language}`.Debug: No default manifest found at {defaultPath}. Please make contact with the Polywrap CLI development community.",
  "lib_project_language_not_found": "Manifest language not found. Please include the `language` property in the manifest file.",
  "lib_project_app_uri_support": "The app command supports only filesystem URIs for plugins. Examples:",
  "lib_project_imported_plugin_manifest_not_found": "No manifest found for imported plugin namespace `{namespace}` at path `{path}`",
  "lib_project_invalid_uri": "Invalid URI Received:",
  "lib_typescript_notInstalled": "Your project uses typescript, but it's not installed",
  "lib_typescript_tsNodeNotInstalled": "Your project uses typescript, but ts-node is not installed",
  "lib_watcher_alreadyWatching": "Watcher session is already in progress. Directory: {dir}",
  "lib_wasm_rust_invalidModule": "Module paths must point to Cargo.toml files. Found: {path}",
  "lib_docker_invalidImageId": "Invalid docker image ID returned: {imageId}",
  "lib_docker_noInstall": "Docker executable not found in PATH",
  "lib_infra_unrecognizedModule": "Unrecognized modules: {modules}. Default modules: {defaultModules}",
  "lib_wrap_abi_not_found": "No WRAP ABI found",
  "lib_helpers_wrap_manifest_outputText": "WRAP manifest written in {path}",
  "lib_helpers_wrap_manifest_outputError": "Error writing WRAP manifest in {path}",
  "lib_helpers_wrap_manifest_outputWarning": "Warning writing WRAP manifest in {path}",
  "lib_option_defaults_deprecated_project_manifest": "WARNING: the filename `{fileName}` is deprecated and will be removed from the default project manifest files in the future. Please rename it to `polywrap.yaml`."
}
